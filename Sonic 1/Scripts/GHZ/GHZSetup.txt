// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: GHZ Setup Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================
private alias object.frame : object.sunFlowerFrame
private alias object.value0 : object.sunFlowerTimer
private alias object.value1 : object.extendFlowerTimer
private alias object.value2 : object.extendFlowerFrame
private alias object.value3 : object.paletteTimer
private alias object.value4 : object.waterfallLoopTimer
private alias object.value5 : object.playingWaterfallLoop


// ========================
// Function Declarations
// ========================
reserve function GHZSetup_SpeedUpMusic
reserve function GHZSetup_SlowDownMusic


// ========================
// Static Values
// ========================
public value GHZSetup_value29 = 0
public value GHZSetup_value30 = false
public value GHZSetup_value31 = 0

// Kept here for mod compatability reasons, please don't use these if possible
private alias GHZSetup_value29 : GHZSetup_spikeLogsCounter
private alias GHZSetup_value30 : GHZSetup_playingWaterfallSfx
private alias GHZSetup_value31 : GHZSetup_waterfallPan

// Tracks
private alias 0 : TRACK_STAGE
private alias 2 : TRACK_INVINCIBLE
private alias 4 : TRACK_BOSS

// Reserved object slots
private alias 10 : SLOT_ZONESETUP
private alias 25 : SLOT_MUSICEVENT_CHANGE
private alias 26 : SLOT_MUSICEVENT_BOSS

// Music Events
private alias 0 : MUSICEVENT_FADETOBOSS
private alias 1 : MUSICEVENT_FADETOSTAGE
private alias 2 : MUSICEVENT_TRANSITION

private alias 0 : MUSICEVENT_FLAG_NOCHANGE
private alias 1 : MUSICEVENT_FLAG_SPEEDUP
private alias 2 : MUSICEVENT_FLAG_SLOWDOWN

// Music loops
private alias 635050 : MUSIC_LOOP_GHZ   // Interestingly, this loop point was instead 635970 in older S1 versions...
private alias 502294 : MUSIC_LOOP_GHZ_F // ...but this sped-up version had its loop point stay the same...

private alias 39528  : MUSIC_LOOP_INV
private alias 30436  : MUSIC_LOOP_INV_F


// ========================
// Tables
// ========================
private table GHZSetup_replay_attract_S
	0x00500000, 0x3B00000
	0b00000000, 11
	0b00001000, 91
	0b00111000, 1
	0b00101000, 7
	0b00001000, 87
	0b00111000, 1
	0b00101000, 8
	0b00001000, 47
	0b00111000, 1
	0b00101000, 7
	0b00001000, 204
	0b00111000, 1
	0b00101000, 7
	0b00001000, 32
	0b00111000, 1
	0b00101000, 9
	0b00001000, 43
	0b00111000, 1
	0b00101000, 28
	0b00001000, 61
	0b00111000, 1
	0b00101000, 24
	0b00001000, 30
	0b00111000, 1
	0b00101000, 44
	0b00001000, 22
	0b00111000, 1
	0b00101000, 21
	0b00001000, 42
	0b00111000, 1
	0b00101000, 107
	0b00001000, 255
	0b00001000, 33
	0b00000000, 203
	0b00000100, 44
	0b00000000, 12
	0b00000100, 11
	0b00000000, 23
	0b00001000, 20
	0b00000000, 15
	0b00000100, 4
	0b00000000, 19
	0b00001000, 16
	0b00111000, 1
	0b00101000, 10
	0b00001000, 39
	0b00111000, 1
	0b00101000, 8
	0b00001000, 42
	0b00111000, 1
end table

private table GHZSetup_replay_attract_T
	0x00500000, 0x3B40000
	0b00000000, 11
	0b00001000, 91
	0b00111000, 1
	0b00101000, 10
	0b00001000, 75
	0b00000100, 12
	0b00110100, 1
	0b00100100, 24
	0b00000100, 19
	0b00110100, 1
	0b00100100, 7
	0b00000100, 8
	0b00000000, 27
	0b00001000, 55
	0b00111000, 1
	0b00101000, 4
	0b00100000, 5
	0b00000000, 29
	0b00000100, 25
	0b00000000, 11
	0b00001000, 34
	0b00000000, 11
	0b00001000, 30
	0b00111000, 1
	0b00101000, 9
	0b00001000, 202
	0b00111000, 1
	0b00101000, 9
	0b00001000, 35
	0b00111000, 1
	0b00101000, 8
	0b00001000, 45
	0b00111000, 1
	0b001010000, 14
	0b00001000, 17
	0b00000000, 7
	0b00001000, 52
	0b00111000, 1
	0b00101000, 17
	0b00001000, 33
	0b00111000, 1
	0b00101000, 33
	0b00001000, 2
	0b00000000, 29
	0b00001000, 14
	0b00111000, 1
	0b00101000, 6
	0b00001000, 5
	0b00000000, 13
	0b00000100, 9
	0b00000000, 11
	0b00110000, 1
	0b00100000, 6
	0b00001000, 6
	0b00111000, 1
	0b00101000, 6
	0b00001000, 16
	0b00111000, 1
	0b00101000, 5
	0b00001000, 33
	0b00000000, 8
	0b00000100, 11
	0b00000000, 21
	0b00001000, 9
	0b00000000, 31
	0b00110000, 1
	0b00100000, 6
	0b00000000, 2
	0b00001000, 28
	0b00000000, 28
	0b00000100, 5
	0b00000000, 5
	0b00001000, 25
	0b00111000, 1
	0b00101000, 2
	0b00001000, 28
	0b00000000, 6
	0b00000100, 9
	0b00000000, 6
	0b00001000, 31
	0b00000000, 45
	0b00111000, 1
	0b00101000, 5
	0b00000000, 2
	0b00001000, 9
	0b00000000, 7
	0b00001000, 10
	0b00000000, 30
	0b00001000, 12
	0b00000000, 37
	0b00000100, 17
	0b00000000, 22
	0b00001000, 20
	0b00111000, 1
	0b00101000, 11
	0b00001000, 52
	0b00111000, 1
	0b00101000, 12
end table

private table GHZSetup_replay_attract_K
	0x00500000, 0x3B00000
	0b00000000, 11
	0b00001000, 92
	0b00111000, 1
	0b00101000, 12
	0b00001000, 82
	0b00000010, 12
	0b00000000, 24
	0b00110000, 1
	0b00100000, 26
	0b00000000, 3
	0b00001000, 2
	0b00111000, 1
	0b00101000, 88
	0b00001000, 2
	0b00000000, 28
	0b00000010, 16
	0b00110010, 1
	0b00100010, 7
	0b00000010, 5
	0b00110010, 1
	0b00100010, 2
	0b00000010, 5
	0b00110010, 1
	0b00100010, 3
	0b00000010, 3
	0b00110010, 1
	0b00100010, 2
	0b00000010, 4
	0b00001000, 105
	0b00000000, 109
	0b00001000, 12
	0b00111000, 1
	0b00101000, 44
	0b00001000, 51
	0b00111000, 1
	0b00101000, 33
	0b00001000, 17
	0b00111000, 1
	0b00101000, 40
	0b00001000, 31
	0b00111000, 1
	0b00101000, 39
	0b00001000, 24
	0b00111000, 1
	0b00101000, 64
	0b00001000, 17
	0b00111000, 1
	0b00101000, 15
	0b00001000, 241
	0b00000000, 29
	0b00110000, 1
	0b00100000, 18
	0b00000000, 4
	0b00110000, 1
	0b00100000, 30
	0b00100001, 3
	0b00000001, 171
	0b00000000, 15
	0b00000010, 12
	0b00110010, 1
	0b00100010, 7
	0b00000010, 4
	0b00110010, 1
	0b00100010, 2
	0b00000010, 6
	0b00110010, 1
	0b00100010, 2
	0b00000010, 4
	0b00110010, 1
	0b00100010, 5
	0b00000010, 22
	0b00000000, 2
	0b00001000, 47
	0b00000000, 6
end table

private table GHZSetup_replay_credits_STK_1
	0x00500000, 0x3B00000
	0b00001000, 91
	0b00111000, 1
	0b00101000, 9
	0b00001000, 83
	0b00111000, 1
	0b00101000, 5
	0b00001000, 52
	0b00111000, 1
	0b00101000, 8
	0b00001000, 160
	0b00000000, 8
	0b00001000, 26
	0b00111000, 1
	0b00101000, 3
	0b00100000, 2
	0b00000000, 6
	0b00000100, 5
	0b00000000, 13
	0b00001000, 44
	0b00111000, 1
	0b00101000, 5
	0b00001000, 17
	0b00000000, 16
	0b00001000, 13
	0b00001000, 5
	0b00001000, 42
	0b00000000, 52
	0b00001000, 30
end table

private table GHZSetup_replay_credits_STK_2
	0x13E80000, 0x2AC0000
	0b00000000, 17
	0b00001000, 255
	0b00001000, 31
	0b00000000, 219
end table

// ========================
// Function Definitions
// ========================

function GHZSetup_SpeedUpMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, MUSICEVENT_TRANSITION)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == false
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F)
			SwapMusicTrack("GreenHill_F.ogg", TRACK_STAGE, MUSIC_LOOP_GHZ_F, 7920)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("GreenHill_F.ogg", TRACK_STAGE, MUSIC_LOOP_GHZ_F)
			SwapMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F, 8000)
			break

		case TRACK_BOSS
			SetMusicTrack("GreenHill_F.ogg", TRACK_STAGE, MUSIC_LOOP_GHZ_F)
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F)
			break
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SPEEDUP
	end if
end function


function GHZSetup_SlowDownMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, MUSICEVENT_TRANSITION)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == false
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV)
			SwapMusicTrack("GreenHill.ogg", TRACK_STAGE, MUSIC_LOOP_GHZ, 12650)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("GreenHill.ogg", TRACK_STAGE, MUSIC_LOOP_GHZ)
			SwapMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV, 12650)
			break

		case TRACK_BOSS
			SetMusicTrack("GreenHill.ogg", TRACK_STAGE, MUSIC_LOOP_GHZ)
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV)
			break
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SLOWDOWN
	end if
end function


// ========================
// Events
// ========================

event ObjectMain
	if GHZSetup_playingWaterfallSfx != false
		GHZSetup_playingWaterfallSfx = false
		object.waterfallLoopTimer--
		if object.waterfallLoopTimer <= 0
			object.waterfallLoopTimer = 31
			if object.playingWaterfallLoop == false
				if credits.screen == 0
					PlaySfx(SfxName[Waterfall], false)
					StopSfx(SfxName[Waterfall Loop])
				end if
				object.playingWaterfallLoop = true
			else
				if credits.screen == 0
					StopSfx(SfxName[Waterfall])
					PlaySfx(SfxName[Waterfall Loop], false)
				end if
			end if
		end if

		SetSfxAttributes(SfxName[Waterfall], -1, GHZSetup_waterfallPan)
		SetSfxAttributes(SfxName[Waterfall Loop], -1, GHZSetup_waterfallPan)
	else
		object.playingWaterfallLoop = false
		object.waterfallLoopTimer   = 0
	end if

	if object.state < 5
		object.paletteTimer++
		if object.paletteTimer == 6
			object.paletteTimer = 0
			RotatePalette(0, 168, 171, true)
			GHZSetup_spikeLogsCounter++
			GHZSetup_spikeLogsCounter &= 15
		end if
	end if

	if object.sunFlowerTimer == 0
		object.sunFlowerTimer = 20
		temp0 = 768
		temp0 += object.sunFlowerFrame
		Copy16x16Tile(427, temp0)
		temp0++
		Copy16x16Tile(428, temp0)
		temp0++
		Copy16x16Tile(429, temp0)
		temp0++
		Copy16x16Tile(430, temp0)
		object.sunFlowerFrame += 4
		object.sunFlowerFrame &= 7
	else
		object.sunFlowerTimer--
	end if

	if object.extendFlowerTimer == 0
		switch object.extendFlowerFrame
		case 0
			object.extendFlowerTimer = 160
			temp0 = 0
			break
		case 1
			object.extendFlowerTimer = 10
			temp0 = 6
			break
		case 2
			object.extendFlowerTimer = 160
			temp0 = 12
			break
		case 3
			object.extendFlowerTimer = 10
			temp0 = 6
			break
		end switch
		temp0 += 776
		Copy16x16Tile(431, temp0)
		temp0++
		Copy16x16Tile(432, temp0)
		temp0++
		Copy16x16Tile(433, temp0)
		temp0++
		Copy16x16Tile(434, temp0)
		temp0++
		Copy16x16Tile(435, temp0)
		temp0++
		Copy16x16Tile(436, temp0)
		object.extendFlowerFrame++
		object.extendFlowerFrame &= 3
	else
		object.extendFlowerTimer--
	end if
end event


event ObjectStartup
	SetMusicTrack("GreenHill.ogg", TRACK_STAGE, MUSIC_LOOP_GHZ)
	SpeedUpMusic = GHZSetup_SpeedUpMusic
	SlowDownMusic = GHZSetup_SlowDownMusic

	animalType1 = TypeName[Pocky]
	animalType2 = TypeName[Flicky]

	Abs(tileLayer[1].parallaxFactor)
	FlipSign(tileLayer[1].parallaxFactor)
	tileLayer[1].scrollPos = 0x180000

	object[SLOT_ZONESETUP].type = TypeName[GHZ Setup]
	object[SLOT_ZONESETUP].priority = PRIORITY_ACTIVE

	GHZSetup_spikeLogsCounter = 0

	if options.attractMode == true
		switch stage.playerListPos
		case PlayerName[SONIC]
			switch credits.screen
			case 0
				PlayerObject_ReplayTable = GHZSetup_replay_attract_S
				PlayerObject_ReplaySize = 102
				PlayerObject_ReplayLength = 1800
				break

			case 1
				PlayerObject_ReplayTable = GHZSetup_replay_credits_STK_1
				PlayerObject_ReplaySize = 58
				PlayerObject_ReplayLength = 540
				break

			case 8
				PlayerObject_ReplayTable = GHZSetup_replay_credits_STK_2
				PlayerObject_ReplaySize = 10
				PlayerObject_ReplayLength = 540
				break
			end switch
			break

		case PlayerName[TAILS]
			switch credits.screen
			case 0
				PlayerObject_ReplayTable 	= GHZSetup_replay_attract_T
				PlayerObject_ReplaySize 	= 198
				PlayerObject_ReplayLength 	= 1800
				break

			case 1
				PlayerObject_ReplayTable 	= GHZSetup_replay_credits_STK_1
				PlayerObject_ReplaySize 	= 58
				PlayerObject_ReplayLength 	= 540
				break

			case 8
				PlayerObject_ReplayTable 	= GHZSetup_replay_credits_STK_2
				PlayerObject_ReplaySize 	= 10
				PlayerObject_ReplayLength 	= 540
				break
			end switch
			break

		case PlayerName[KNUCKLES]
			switch credits.screen
			case 0
				PlayerObject_ReplayTable 	= GHZSetup_replay_attract_K
				PlayerObject_ReplaySize 	= 150
				PlayerObject_ReplayLength 	= 1800
				break

			case 1
				PlayerObject_ReplayTable 	= GHZSetup_replay_credits_STK_1
				PlayerObject_ReplaySize 	= 58
				PlayerObject_ReplayLength 	= 540
				break

			case 8
				PlayerObject_ReplayTable 	= GHZSetup_replay_credits_STK_2
				PlayerObject_ReplaySize 	= 10
				PlayerObject_ReplayLength 	= 540
				break
			end switch
			break
		end switch
		
		CallFunction(PlayerObject_InitReplay)
	end if
end event


// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
