// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Tube Switch Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias object.value0 : object.inTube // I dont really know what the point of this variable is but alright I guess

private alias 0 : TUBESWITCH_L
private alias 1 : TUBESWITCH_R

private alias object.value34 :	player.collisionEnabled

// Static Values

// Tables

event ObjectMain
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		if player[currentPlayer].collisionEnabled == true
			player[currentPlayer].collisionEnabled = false
		end if

		CheckEqual(object[currentPlayer].state, PlayerObject_Death)
		temp0 = checkResult
		CheckEqual(object[currentPlayer].state, PlayerObject_KnuxLedgePullUp)
		temp0 |= checkResult
		CheckEqual(object[currentPlayer].state, PlayerObject_KnuxWallClimb)
		temp0 |= checkResult
		if temp0 == 0
			BoxCollisionTest(C_TOUCH, object.entityPos, -16, -16, 16, 16, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			if checkResult == true

				if object[currentPlayer].yvel < 0
					object[currentPlayer].yvel = 0
				end if

				switch object.propertyValue
				case TUBESWITCH_L // Enter from the left, exit from the right
					if object[currentPlayer].xvel > 0
						if object[currentPlayer].animation != ANI_JUMPING
							if object[currentPlayer].state != PlayerObject_Unknown2
								PlaySfx(SfxName[Rolling], false)
							end if
						end if

						if object[currentPlayer].state == PlayerObject_KnuxGlideLeft
							FlipSign(object[currentPlayer].speed)
						end if

						object[currentPlayer].direction = FLIP_NONE
						object[currentPlayer].state 	= PlayerObject_Unknown2
						object[currentPlayer].animation = ANI_JUMPING
					else
						if object[currentPlayer].gravity == GRAVITY_GROUND
							if object[currentPlayer].xvel > -0x20000
								object[currentPlayer].speed = -0x20000
							end if
						end if

						object[currentPlayer].state = PlayerObject_HandleRoll
						object[currentPlayer].animation = ANI_JUMPING
					end if
					break

				case TUBESWITCH_R // Enter from the right, exit from the left
					if object[currentPlayer].xvel < 0
						if object[currentPlayer].animation != ANI_JUMPING
							if object[currentPlayer].state != PlayerObject_Unknown2
								PlaySfx(SfxName[Rolling], false)
							end if
						end if

						if object[currentPlayer].state == PlayerObject_KnuxGlideLeft
							FlipSign(object[currentPlayer].speed)
						end if

						object[currentPlayer].direction = FLIP_X
						object[currentPlayer].state 	= PlayerObject_Unknown2
						object[currentPlayer].animation = ANI_JUMPING
					else
						if object[currentPlayer].gravity == GRAVITY_GROUND
							if object[currentPlayer].xvel < 0x20000
								object[currentPlayer].speed = 0x20000
							end if
						end if

						object[currentPlayer].state = PlayerObject_HandleRoll
						object[currentPlayer].animation = ANI_JUMPING
					end if
					break

				end switch
				object.inTube = true
			else
				object.inTube = false
			end if
		end if
	next
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
