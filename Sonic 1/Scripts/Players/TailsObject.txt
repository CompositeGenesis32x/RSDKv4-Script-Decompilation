// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: Tails Object Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================
private alias object.value2  : player.abilityTimer			// Note: Also used by death/drowning state
private alias object.value3  : player.drownTimer			// Countdown before player moves to next drown "level"
private alias object.value4  : player.drownLevel
private alias object.value8  : player.blinkTimer
private alias object.value12 : player.tailFrame
private alias object.value13 : player.tailAnim
private alias object.value17 : debugMode.currentSelection
private alias object.value19 : player.scoreBonus
private alias object.value30 : player.jumpOffset
private alias object.value34 : player.collisionDisabled
private alias object.value35 : player.jumpAbilityState
private alias object.value42 : player.prevGravity

// ========================
// Function Declarations
// ========================
reserve function TailsObject_ProcessTailAnim

function TailsObject_ProcessTailAnim

	switch player.tailAnim
	case 0 // ANI_STOPPED
		if object.frame == 0
			player.tailFrame++
			player.tailFrame %= 40
		end if
		break
		
	case 1 // ANI_WAITING
	case 3 // ANI_LOOKINGUP
	case 4 // ANI_LOOKINGDOWN
		player.tailFrame++
		player.tailFrame %= 40
		break
		
	case 7 // ANI_SKIDDING
	case 9 // ANI_SPINDASH
	case 10 // ANI_JUMPING
	case 43 // Unknown, this was probably "SSRoll" before it got moved to its own ani file
		player.tailFrame++
		player.tailFrame %= 12
		break
		
	case 17 // ANI_PUSHING
		player.tailFrame++
		player.tailFrame %= 30
		break
	end switch
	
end function

event ObjectMain

	if stage.debugMode == true
		CallFunction(PlayerObject_ProcessPlayer)
		
		CheckEqual(options.attractMode, false)
		temp0 = checkResult
		CheckEqual(inputPress.buttonB, true)
		temp0 &= checkResult
		
		if temp0 == true
			object.type = TypeName[Debug Mode]
			object.yvel = 0
			object.state = PlayerObject_Blank
			object.frame = 0
			object.rotation = 0
			object.interaction = 0
			object.drawOrder = 4
			object.priority = PRIORITY_ACTIVE
			player.blinkTimer = 0
			object.visible = true
			player.abilityTimer = 0
			player.drownTimer = 0
			player.drownLevel = 0
			object.frame = debugMode.currentSelection
			screen.cameraEnabled = true
			screen.cameraStyle = 0
			StopSfx(SfxName[Flying])
			StopSfx(SfxName[Jump])

			if stage.state == STAGE_FROZEN
				stage.state = STAGE_RUNNING
			end if

			if object[1].type == TypeName[Player 2 Object]
				object[1].priority = PRIORITY_ACTIVE
			end if

			if object[+playerCount].propertyValue == 3
				object[+playerCount].type = TypeName[Invincibility]
				object[+playerCount].propertyValue = 0
			end if
		else
			if object.gravity == GRAVITY_GROUND
				player.jumpAbilityState = 0
			end if

			CallFunction(object.state)
			ProcessAnimation()
			CallFunction(TailsObject_ProcessTailAnim)

			if object.animation == ANI_JUMPING
				screen.adjustCameraY = player.jumpOffset
			else
				if screen.adjustCameraY == player.jumpOffset
					screen.adjustCameraY = 0
					object.iypos += player.jumpOffset
				end if
			end if

			if player.collisionDisabled == false
				temp0 = player.prevGravity
				player.prevGravity = object.gravity
				ProcessObjectMovement()
				player.prevGravity ^= 1
				CheckEqual(object.gravity, GRAVITY_GROUND)
				player.prevGravity |= checkResult
				player.prevGravity ^= 1
				if temp0 == 1
					if player.prevGravity == 0
						player.scoreBonus = 0
						achieveRingCount = 0
						if object.animation == ANI_JUMPING
							if object.down == false
								if object.state != PlayerObject_HandleRolling
									if object.state != PlayerObject_TubeSwitch
										object.animation = ANI_WALKING
										if object.entityPos == screen.cameraTarget
											screen.adjustCameraY = 0
										end if
										object.iypos += player.jumpOffset
									end if
								end if
							end if
						end if
					end if
				end if
			else
				player.collisionDisabled = false
			end if
		end if
	else
		CallFunction(PlayerObject_ProcessPlayer)

		if object.gravity == GRAVITY_GROUND
			player.jumpAbilityState = 0
		end if

		CallFunction(object.state)
		ProcessAnimation()
		CallFunction(TailsObject_ProcessTailAnim)

		if object.animation == ANI_JUMPING
			screen.adjustCameraY = player.jumpOffset
		else
			if screen.adjustCameraY == player.jumpOffset
				screen.adjustCameraY = 0
				object.iypos += player.jumpOffset
			end if
		end if

		if player.collisionDisabled == false
			temp0 = player.prevGravity
			player.prevGravity = object.gravity
			ProcessObjectMovement()
			player.prevGravity ^= 1
			CheckEqual(object.gravity, GRAVITY_GROUND)
			player.prevGravity |= checkResult
			player.prevGravity ^= 1
			if temp0 == 1
				if player.prevGravity == 0
					player.scoreBonus = 0
					achieveRingCount = 0
					if object.animation == ANI_JUMPING
						if object.down == false
							if object.state != PlayerObject_HandleRolling
								if object.state != PlayerObject_TubeSwitch
									object.animation = ANI_WALKING
									if object.entityPos == screen.cameraTarget
										screen.adjustCameraY = 0
									end if
									object.iypos += player.jumpOffset
								end if
							end if
						end if
					end if
				end if
			end if
		else
			player.collisionDisabled = false
		end if
	end if

	CallFunction(PlayerObject_ProcessSuperForms)
end event


event ObjectDraw

	if object.animation != object.prevAnimation
		object.prevAnimation = object.animation
		object.frame = 0
		object.animationTimer = 0
		object.animationSpeed = 0
	end if
	
	if player.tailAnim != object.animation
		if object.animation > 4
			player.tailFrame = 0
		end if

		if player.tailAnim > 4
			player.tailFrame = 0
		end if

		player.tailAnim = object.animation
	end if
	
	// Draw the Tails part of Tails
	switch player.tailAnim
	case 0 // ANI_STOPPED
		if object.frame == 0
			temp0 = player.tailFrame
			temp0 >>= 3
			if object.visible == true
				DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
			end if
		end if
		break
		
	case 1 // ANI_WAITING
	case 3 // ANI_LOOKINGUP
	case 4 // ANI_LOOKINGDOWN
	case 37 // ANI_CONTINUE_UP
		temp0 = player.tailFrame
		temp0 >>= 3
		if object.visible == true
			DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		end if
		break
		
	case 7 // ANI_SKIDDING
	case 9 // ANI_SPINDASH
		temp0 = player.tailFrame
		temp0 >>= 2
		temp0 += 11
		if object.visible == true
			DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		end if
		break
		
	case 10 // ANI_JUMPING
	case 43 // Unknown, this was probably "SSRoll" before it got moved to its own ani file
		temp0 = player.tailFrame
		temp0 >>= 2
		CheckEqual(object.xvel, 0)
		temp1 = checkResult
		CheckEqual(object.yvel, 0)
		temp1 &= checkResult
		temp2 = object.rotation
		if temp1 == 0
			ATan2(object.rotation, object.xvel, object.yvel)
			object.rotation += 0x10
			object.rotation &= 0xFF
			object.rotation >>= 5
			switch object.rotation
			case 0
			case 8
				temp0 += 5
				object.rotation = 0x00
				break

			case 1
				temp0 += 8
				if object.direction == FLIP_NONE
					object.rotation = 0x40
				else
					object.rotation = 0x00
				end if
				break

			case 2
				temp0 += 5
				object.rotation = 0x40
				break

			case 3
				temp0 += 8
				if object.direction == FLIP_NONE
					object.rotation = 0x80
				else
					object.rotation = 0x40
				end if
				break

			case 4
				temp0 += 5
				object.rotation = 0x80
				break

			case 5
				temp0 += 8
				if object.direction == FLIP_NONE
					object.rotation = 0xC0
				else
					object.rotation = 0x80
				end if
				break

			case 6
				temp0 += 5
				object.rotation = 0xC0
				break

			case 7
				temp0 += 8
				if object.direction == FLIP_NONE
					object.rotation = 0x00
				else
					object.rotation = 0xC0
				end if
				break
			end switch

			if object.direction == FLIP_X
				object.rotation += 0x80
			end if
		else
			temp0 += 5
			object.rotation = 0x00
		end if

		object.rotation <<= 1
		if object.visible == true
			DrawSpriteFX(temp0, FX_ROTATE, object.xpos, object.ypos)
		end if
		object.rotation = temp2
		break
		
	case 17 // ANI_PUSHING
		temp0 = player.tailFrame
		temp0 /= 10
		temp0 += 11
		if object.visible == true
			DrawSpriteFX(temp0, FX_FLIP, object.xpos, object.ypos)
		end if
		break
	end switch
	
	// Draw Tails himself
	// (His separate tails are drawn in the process above, notably done before this function call since Tails is supposed to be ontop of his Tails)
	DrawObjectAnimation()
end event


event ObjectStartup

	if stage.playerListPos == true
	
		LoadSpriteSheet("Players/Tails1.gif")
		
		LoadAnimation("Tails.ani")
		
		SpriteFrame(-22, -8, 16, 24, 82, 199)
		SpriteFrame(-26, -8, 20, 24, 99, 199)
		SpriteFrame(-26, -8, 20, 24, 120, 199)
		SpriteFrame(-26, -8, 20, 24, 141, 199)
		SpriteFrame(-26, -8, 20, 24, 162, 199)
		SpriteFrame(-35, -8, 24, 16, 231, 166)
		SpriteFrame(-35, -8, 24, 16, 231, 183)
		SpriteFrame(-35, -8, 24, 16, 231, 200)
		SpriteFrame(-25, 9, 20, 16, 235, 217)
		SpriteFrame(-25, 9, 18, 16, 237, 234)
		SpriteFrame(-25, 9, 20, 16, 216, 234)
		SpriteFrame(-30, -6, 24, 16, 231, 166)
		SpriteFrame(-30, -6, 24, 16, 231, 183)
		SpriteFrame(-30, -6, 24, 16, 231, 200)
		
	end if
	
end event


event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
