// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: MZ Setup Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias object.value1 : object.lavaTileFrame
private alias object.value2 : object.lavaAniTileID
private alias object.value3 : object.lavaAnimTimer
private alias object.value4 : object.candleAnimTimer

private alias 1 : TILE_LAVA

// Player alises
private alias 3 : SHIELD_FIRE
private alias object.value37 : player.shield

// Tracks
private alias 0 : TRACK_STAGE
private alias 2 : TRACK_INVINCIBLE

// Music Events
private alias 25 : SLOT_MUSICEVENT_CHANGE
private alias 26 : SLOT_MUSICEVENT_BOSS

private alias 0 : MUSICEVENT_FADETOBOSS
private alias 1 : MUSICEVENT_FADETOSTAGE
private alias 2 : MUSICEVENT_TRANSITION

private alias 0 : MUSICEVENT_FLAG_NOCHANGE
private alias 1 : MUSICEVENT_FLAG_SPEEDUP
private alias 2 : MUSICEVENT_FLAG_SLOWDOWN

// Function declarations
reserve function MZSetup_SpeedUpMusic
reserve function MZSetup_SlowDownMusic

// Tables
public table MZSetup_replay_attract_S
	0x300000, 0x2640000, 0, 8, 8, 137, 56, 1, 40, 4, 8, 14, 0, 18, 8, 18, 56, 1, 40, 7, 8, 2, 0, 32, 2, 13, 0, 3, 48, 1, 32, 8, 0, 3, 8, 49, 56, 1, 40, 7, 8, 37, 56, 1, 40, 8, 8, 2, 0, 18, 4, 16, 0, 5, 48, 1, 32, 11, 8, 11, 0, 7, 4, 16, 0, 4, 8, 6, 0, 22, 8, 5, 56, 1, 40, 12, 8, 16, 0, 17, 8, 31, 0, 13, 56, 1, 40, 9, 0, 36, 8, 2, 56, 1, 40, 9, 8, 36, 0, 66, 48, 1, 32, 8, 4, 37, 0, 6, 4, 17, 52, 1, 36, 6, 4, 68, 0, 28, 2, 12, 50, 1, 34, 8, 2, 50, 0, 32, 8, 83, 56, 1, 40, 8, 8, 9, 0, 21, 56, 1, 40, 7, 8, 5, 0, 98, 8, 69, 0, 25, 8, 21, 56, 1, 40, 6, 8, 4, 0, 15, 4, 16, 0, 4, 8, 18, 56, 1, 40, 7, 8, 5, 0, 27, 8, 23, 0, 9, 48, 1, 32, 6, 0, 19, 8, 19, 0, 20, 56, 4, 40, 9, 8, 4
end table

public table MZSetup_replay_attract_T
	0x300000, 0x2680000, 0, 8, 8, 41, 56, 1, 40, 3, 8, 80, 56, 1, 40, 6, 8, 7, 0, 23, 8, 21, 56, 1, 40, 5, 8, 6, 0, 15, 8, 8, 0, 17, 56, 1, 40, 5, 8, 46, 56, 1, 40, 12, 8, 30, 0, 9, 48, 1, 32, 3, 40, 3, 0, 25, 4, 4, 0, 7, 8, 3, 56, 1, 40, 7, 0, 14, 4, 18, 0, 5, 8, 5, 56, 1, 40, 9, 8, 7, 0, 24, 8, 17, 0, 12, 8, 19, 0, 3, 48, 1, 32, 7, 40, 4, 8, 12, 0, 20, 8, 17, 56, 1, 40, 10, 8, 98, 0, 7, 4, 80, 52, 1, 36, 20, 4, 2, 0, 14, 8, 21, 56, 1, 40, 10, 8, 15, 56, 1, 40, 7, 8, 59, 0, 23, 8, 6, 56, 1, 40, 6, 8, 56, 0, 27, 8, 24, 0, 17, 8, 73, 56, 1, 40, 8, 8, 23, 0, 5, 4, 25, 0, 24, 4, 36, 0, 77, 4, 35, 52, 1, 36, 7, 4, 7, 0, 13, 8, 19, 0, 53, 4, 10, 52, 1, 36, 4, 4, 16, 0, 14, 4, 8, 0, 101, 4, 4, 52, 1, 36, 2, 4, 32, 0, 14
end table

public table MZSetup_replay_attract_K
	0x300000, 0x2640000, 0, 22, 8, 137, 56, 1, 40, 7, 8, 6, 0, 40, 8, 9, 56, 1, 40, 6, 8, 18, 0, 3, 4, 16, 8, 5, 56, 1, 40, 8, 8, 22, 56, 1, 40, 27, 8, 32, 56, 1, 40, 15, 8, 9, 0, 27, 48, 1, 32, 10, 40, 2, 8, 18, 0, 21, 8, 2, 56, 1, 40, 14, 32, 3, 0, 8, 4, 16, 0, 3, 8, 40, 56, 1, 40, 24, 8, 4, 0, 18, 8, 11, 56, 1, 40, 13, 8, 86, 56, 1, 40, 5, 8, 6, 56, 1, 40, 201, 8, 31, 56, 1, 40, 6, 8, 11, 0, 17, 8, 29, 0, 47, 48, 1, 32, 14, 0, 24, 4, 15, 0, 16, 8, 9, 0, 47, 48, 1, 32, 13, 40, 2, 8, 8, 56, 1, 40, 20, 9, 3, 1, 83, 9, 2, 8, 91, 0, 29, 48, 1, 32, 13, 0, 7, 48, 1, 32, 15, 33, 1
end table

public table MZSetup_replay_credits_ST
	0xEA00000, 0x46C0000, 0, 23, 4, 40, 0, 5, 8, 31, 56, 1, 40, 30, 8, 24, 56, 1, 40, 3, 44, 2, 36, 8, 4, 13, 0, 15, 4, 16, 0, 5, 4, 22, 52, 1, 36, 3, 4, 4, 0, 16, 4, 121, 0, 42, 8, 8, 0, 19, 0, 8, 4, 1, 0, 64
end table

public table MZSetup_replay_credits_K
	0xEA00000, 0x46C0000, 0, 25, 4, 29, 52, 1, 36, 15, 4, 5, 0, 18, 8, 17, 56, 1, 40, 10, 8, 4, 56, 1, 40, 43, 8, 4, 0, 17, 4, 4, 52, 1, 36, 5, 4, 3, 0, 33, 4, 109, 0, 34, 8, 9, 0, 15, 4, 5, 0, 255, 0, 40, 48, 1, 32, 8, 0, 7, 4, 12, 
end table

function MZSetup_SpeedUpMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, 2)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == false
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, 30436)
			SwapMusicTrack("Marble_F.ogg", TRACK_STAGE, 0x136B1, 8000)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("Marble_F.ogg", TRACK_STAGE, 0x136B1)
			SwapMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, 30436, 8000)
			break

		case TRACK_BOSS
			SetMusicTrack("Marble_F.ogg", TRACK_STAGE, 0x136B1)
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, 30436)
			break
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SPEEDUP
	end if
end function


function MZSetup_SpeedUpMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, 2)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == false
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, 39528)
			SwapMusicTrack("Marble.ogg", TRACK_STAGE, 99380, 12500)
			break
			
		case TRACK_INVINCIBLE
			SetMusicTrack("Marble.ogg", TRACK_STAGE, 99380)
			SwapMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, 39528, 12500)
			break

		case TRACK_BOSS
			SetMusicTrack("Marble.ogg", TRACK_STAGE, 99380)
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, 39528)
			break
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SLOWDOWN
	end if
end function


event ObjectMain
	object.frame = object.animationTimer
	object.frame /= 20
	object.animationTimer++
	object.animationTimer %= 60

	object.lavaAniTileID = object.frame
	object.lavaAniTileID <<= 1
	object.lavaAniTileID += 440
	Copy16x16Tile(366, object.lavaAniTileID)

	object.lavaAniTileID++
	Copy16x16Tile(367, object.lavaAniTileID)

	switch object.frame
	case 0
		object.lavaAniTileID = 460
		break
	case 1
		object.lavaAniTileID = 528
		break
	case 2
		object.lavaAniTileID = 596
		break
	end switch

	object.lavaAnimTimer++
	object.lavaAnimTimer &= 0x1FF
	Sin(object.lavaTileFrame, object.lavaAnimTimer)
	object.lavaTileFrame += 0x200
	object.lavaTileFrame >>= 2
	object.lavaTileFrame &= 0x1F
	if object.lavaTileFrame > 0xF
		object.lavaTileFrame &= 15
		object.lavaTileFrame <<= 2

		object.lavaAniTileID += object.lavaTileFrame
		Copy16x16Tile(363, object.lavaAniTileID)

		object.lavaAniTileID++
		Copy16x16Tile(362, object.lavaAniTileID)

		object.lavaAniTileID++
		Copy16x16Tile(365, object.lavaAniTileID)

		object.lavaAniTileID++
		Copy16x16Tile(364, object.lavaAniTileID)
	else
		object.lavaTileFrame <<= 2

		object.lavaAniTileID += object.lavaTileFrame
		Copy16x16Tile(362, object.lavaAniTileID)

		object.lavaAniTileID++
		Copy16x16Tile(363, object.lavaAniTileID)

		object.lavaAniTileID++
		Copy16x16Tile(364, object.lavaAniTileID)

		object.lavaAniTileID++
		Copy16x16Tile(365, object.lavaAniTileID)
	end if

	// BG Candles
	temp0 = object.candleAnimTimer
	temp0 >>= 4
	temp0 <<= 1
	temp0 += 446
	Copy16x16Tile(360, temp0)
	temp0++
	Copy16x16Tile(361, temp0)
	temp0++
	object.candleAnimTimer++
	object.candleAnimTimer &= 0x3F

	// Lava tiles
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		temp1 = object[currentPlayer].xpos
		temp1 >>= 16
		temp2 = object[currentPlayer].ypos
		temp2 >>= 16
		temp2 += 4
		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEB)
		if temp0 == TILE_LAVA
			if player[currentPlayer].shield != SHIELD_FIRE
				CallFunction(PlayerObject_Hit)
			end if
		end if
	next
end event


event ObjectDraw
	if screen.yoffset > 458
		temp0 = screen.yoffset
		temp0 -= 458
		temp0 *= 0xC000
		tileLayer[1].scrollPos = temp0
	else
		tileLayer[1].scrollPos = 0
	end if
end event


event ObjectStartup

	// Set the music track for this Stage
	SetMusicTrack("Marble.ogg", TRACK_STAGE, 99380)
	SpeedUpMusic = MZSetup_SpeedUpMusic
	SlowDownMusic = MZSetup_SpeedUpMusic

	// Ricky and Rocky are the inhabitants along this flamed quest
	animalType1 = TypeName[Ricky]
	animalType2 = TypeName[Rocky]

	// Set object 10 to an MZ Setup object
	object[10].type = TypeName[MZ Setup]
	object[10].priority = PRIORITY_ACTIVE
	object[10].drawOrder = 0

	// Different parallax between the different acts
	// (Act 1 parallax info is built into the normal MZ BG file)
	switch stage.actNum
	case 2
		hParallax[0].scrollPos = 0x1000000
		hParallax[1].scrollPos = 0x2000000
		hParallax[2].scrollPos = 0x2000000
		hParallax[3].scrollPos = 0x2000000
		hParallax[4].scrollPos = 0x2000000
		hParallax[5].scrollPos = 0x2000000
		hParallax[6].scrollPos = 0x2000000
		break
	
	case 3
		hParallax[0].scrollPos = 0x4000000
		hParallax[1].scrollPos = 0x1000000
		hParallax[2].scrollPos = 0x1000000
		hParallax[3].scrollPos = 0x1000000
		hParallax[4].scrollPos = 0x1000000
		hParallax[5].scrollPos = 0x1000000
		hParallax[6].scrollPos = 0x1000000
		break
	end switch

	if options.attractMode == true
		switch stage.playerListPos
		case PlayerName[SONIC]
			if credits.screen == false
				PlayerObject_ReplayTable = MZSetup_replay_attract_S
				PlayerObject_ReplaySize = 194
				PlayerObject_ReplayLength = 1660
			else
				PlayerObject_ReplayTable = MZSetup_replay_credits_ST
				PlayerObject_ReplaySize = 56
				PlayerObject_ReplayLength = 540
			end if
			break

		case PlayerName[TAILS]
			if credits.screen == false
				PlayerObject_ReplayTable = MZSetup_replay_attract_T
				PlayerObject_ReplaySize = 206
				PlayerObject_ReplayLength = 1800
			else
				PlayerObject_ReplayTable = MZSetup_replay_credits_ST
				PlayerObject_ReplaySize = 56
				PlayerObject_ReplayLength = 540
			end if
			break

		case PlayerName[KNUCKLES]
			if credits.screen == false
				PlayerObject_ReplayTable = MZSetup_replay_attract_K
				PlayerObject_ReplaySize = 162
				PlayerObject_ReplayLength = 1800
			else
				PlayerObject_ReplayTable = MZSetup_replay_credits_K
				PlayerObject_ReplaySize = 62
				PlayerObject_ReplayLength = 540
			end if
			break

		end switch

		CallFunction(PlayerObject_InitReplay)
	end if
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
