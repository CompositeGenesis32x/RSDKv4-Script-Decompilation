// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Goggles Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 79 : TYPE_GOGGLES

private alias object.value0 : object.targetPlayer
private alias object.value1 : object.frameTable

// Player aliases
private alias object.type 		: player.type
private alias object.animation	: player.animation
private alias object.direction	: player.direction
private alias object.rotation	: player.rotation
private alias object.xpos 		: player.xpos
private alias object.ypos 		: player.ypos
private alias object.frame 		: player.frame

// Tables
private table Goggles_frameTableSonic
	1 		// ANI_STOPPED
	2 		// ANI_WAITING
	0 		// ANI_BORED (blank)
	8 		// ANI_LOOKINGUP
	11 		// ANI_LOOKINGDOWN
	14 		// ANI_WALKING
	20 		// ANI_RUNNING
	24 		// ANI_SKIDDING
	0 		// ANI_PEELOUT - even if there's logid for it in other places, it's blank here
	0 		// ANI_SPINDASH
	26 		// ANI_JUMPING
	31 		// ANI_BOUNCING
	32 		// ANI_HURT
	0 		// ANI_DYING 
	0 		// ANI_DROWNING
	34 		// ANI_FANROTATE
	39 		// ANI_BREATHING
	40 		// ANI_PUSHING
	44 		// ANI_FLAILING1
	44 		// ANI_FLAILING2
	0		// Sliding - blank and unused
	46 		// ANI_HANGING
	0 		// ANI_DROPPING
	48 		// ANI_CLINGING
	0		// ANI_FLYING
	0		// ANI_FLYINGTIRED
	0 		// ANI_SWIMMING
	0 		// ANI_SWIMMINGTIRED
	0 		// ANI_GLIDING
	0 		// ANI_GLIDING_DROP
	0 		// ANI_GLIDING_STOP
	0 		// ANI_CLIMBING
	0 		// ANI_LEDGEPULLUP
	0 		// Corkscrew H - blank and unused
	0 		// Corkscrew V - blank and unused
	32 		// ANI_WATERSLIDE
	0 		// ANI_CONTINUE
	0 		// ANI_CONTINUE_UP
	0 		// ANI_SUPER_TRANSFORM
	0 		// ANI_FLY_LIFT_DOWN
	0 		// ANI_FLY_LIFT_UP
	0 		// ANI_FLY_LIFT_TIRED
	0 		// ANI_SWIM_LIFT
end table

private table Goggles_frameTableTails
	50 		// ANI_STOPPED
	51 		// ANI_WAITING
	0 		// ANI_BORED (blank)
	54 		// ANI_LOOKINGUP
	55 		// ANI_LOOKINGDOWN
	56 		// ANI_WALKING
	64 		// ANI_RUNNING
	68 		// ANI_SKIDDING
	64 		// ANI_PEELOUT - used but not for Tails's Peel Out, actually fastest run anim
	0 		// ANI_SPINDASH
	0 		// ANI_JUMPING
	70 		// ANI_BOUNCING
	72 		// ANI_HURT
	0 		// ANI_DYING
	0 		// ANI_DROWNING
	74 		// ANI_FANROTATE
	79 		// ANI_BREATHING
	80 		// ANI_PUSHING
	84 		// ANI_FLAILING1
	84 		// ANI_FLAILING2
	0 		// Sliding - blank and unused
	0 		// ANI_HANGING
	0 		// ANI_DROPPING
	86 		// ANI_CLINGING
	88 		// ANI_FLYING - unused because Tails is always swimming underwater
	90 		// ANI_FLYINGTIRED - unused for the same reason as above
	92 		// ANI_SWIMMING
	97 		// ANI_SWIMMINGTIRED
	0 		// ANI_GLIDING
	0 		// ANI_GLIDING_DROP
	0 		// ANI_GLIDING_STOP
	0 		// ANI_CLIMBING
	0 		// ANI_LEDGEPULLUP
	0 		// Corkscrew H - blank and unused
	0 		// Corkscrew V - blank and unused
	72 		// ANI_WATERSLIDE
	0 		// ANI_CONTINUE
	0 		// ANI_CONTINUE_UP
	0 		// ANI_SUPER_TRANSFORM
	0 		// ANI_FLY_LIFT_DOWN
	0 		// ANI_FLY_LIFT_UP
	0 		// ANI_FLY_LIFT_TIRED
	0 		// ANI_SWIM_LIFT
end table

private table Goggles_frameTableKnuckles
	100 	// ANI_STOPPED
	101 	// ANI_WAITING
	0 		// ANI_BORED (blank)
	114 	// ANI_LOOKINGUP
	117 	// ANI_LOOKINGDOWN
	120 	// ANI_WALKING
	128 	// ANI_RUNNING
	132 	// ANI_SKIDDING
	0 		// ANI_PEELOUT
	0 		// ANI_SPINDASH
	134 	// ANI_JUMPING
	142 	// ANI_BOUNCING
	143 	// ANI_HURT
	0 		// ANI_DYING
	0 		// ANI_DROWNING
	145 	// ANI_FANROTATE
	155 	// ANI_BREATHING
	156 	// ANI_PUSHING
	160 	// ANI_FLAILING1
	160 	// ANI_FLAILING2
	0 		// Sliding - blank and unused
	0 		// ANI_HANGING
	0 		// ANI_DROPPING
	172 	// ANI_CLINGING
	0 		// ANI_FLYING
	0 		// ANI_FLYINGTIRED
	0 		// ANI_SWIMMING
	0 		// ANI_SWIMMINGTIRED
	174 	// ANI_GLIDING
	177 	// ANI_GLIDING_DROP
	179 	// ANI_GLIDING_STOP
	181 	// ANI_CLIMBING
	187 	// ANI_LEDGEPULLUP
	0 		// Corkscrew H - blank and unused
	0 		// Corkscrew V - blank and unused
	144  	// ANI_WATERSLIDE
	0 		// ANI_CONTINUE
	0 		// ANI_CONTINUE_UP
	0 		// ANI_SUPER_TRANSFORM
	0 		// ANI_FLY_LIFT_DOWN
	0 		// ANI_FLY_LIFT_UP
	0 		// ANI_FLY_LIFT_TIRED
	0 		// ANI_SWIM_LIFT
end table

event ObjectMain

	// Object state is used like a flag, 0 if no table is loaded, 1 if a table is loaded
	if object.state == 0
		switch stage.playerListPos
		case PlayerName[SONIC]
		case PlayerName[SONIC AND TAILS]
			object.frameTable = Goggles_frameTableSonic
			break

		case PlayerName[TAILS]
			object.frameTable = Goggles_frameTableTails
			break

		case PlayerName[KNUCKLES]
			object.frameTable = Goggles_frameTableKnuckles
			break

		end switch

		object.state++
	end if
end event


event ObjectDraw

	// Focus on the assigned player
	currentPlayer = object.targetPlayer

	temp0 = player[currentPlayer].ypos
	temp0 >>= 16

	// Only draw when the player is underwater
	if temp0 >= stage.waterLevel

		// Face the same way the player is facing
		object.direction = player[currentPlayer].direction

		// Check if the player is in an animation that can rotate
		CheckEqual(player[currentPlayer].animation, ANI_WALKING)
		temp0 = checkResult
		CheckEqual(player[currentPlayer].animation, ANI_RUNNING)
		temp0 |= checkResult
		CheckEqual(player[currentPlayer].animation, ANI_PEELOUT)
		temp0 |= checkResult

		if temp0 == true
			// Player is in a rotatable animation, so make the goggles match the player's rotation
			object.rotation = player[currentPlayer].rotation

			if object.rotation >= 256
				object.rotation += 40
			else
				object.rotation += 16
			end if

			object.rotation &= 448
		else
			// Player is an a normal, upright animation so keep the goggles unrotated
			object.rotation = 0
		end if

		// Get the sprite the goggle should use
		object.frame = player[currentPlayer].frame
		GetTableValue(temp0, player[currentPlayer].animation, object.frameTable)

		if temp0 == 0
			object.frame = 0
		else
			object.frame += temp0

			if object.frameTable == Goggles_frameTableTails
				if player[currentPlayer].animation == ANI_WAITING
					if player[currentPlayer].frame <= 20
						object.frame = 50
					else
						if player[currentPlayer].frame <= 36
							object.frame = 51
						else
							if player[currentPlayer].frame == 37
								object.frame = 52
							else
								if player[currentPlayer].frame == 48
									object.frame = 52
								else
									object.frame = 53
								end if
							end if
						end if
					end if
				else
					if player[currentPlayer].animation == ANI_FLYINGTIRED
						object.frame = player[currentPlayer].frame
						object.frame /= 6
						object.frame += 90
					end if
				end if
			else
				if object.frameTable == Goggles_frameTableKnuckles
					if player[currentPlayer].animation == ANI_WAITING
						if player[currentPlayer].frame <= 53
							object.frame = 100
						else
							if player[currentPlayer].frame <= 58
								object.frame = 101
							else
								if player[currentPlayer].frame == 59
									object.frame = 102
								else
									if player[currentPlayer].frame <= 91
										object.frame = player[currentPlayer].frame
										object.frame -= 60
										object.frame &= 3
										object.frame += 103
									else
										object.frame = player[currentPlayer].frame
										object.frame -= 92
										object.frame += 107
									end if
								end if
							end if
						end if
					else
						CheckEqual(player[currentPlayer].animation, ANI_FLAILING1)
						temp0 = checkResult
						CheckEqual(player[currentPlayer].animation, ANI_FLAILING2)
						temp0 |= checkResult
						if temp0 == 1
							if player[currentPlayer].frame < 12
								object.frame = player[currentPlayer].frame
								object.frame >>= 1
								object.frame += 160
							else
								if player[currentPlayer].frame < 27
									object.frame = 166
								else
									if player[currentPlayer].frame < 30
										object.frame = 167
									else
										if player[currentPlayer].frame < 33
											object.frame = 168
										else
											object.frame = player[currentPlayer].frame
											object.frame -= 33
											object.frame >>= 1
											object.frame %= 3
											object.frame += 169
										end if
									end if
								end if
							end if
						end if
					end if
				end if
			end if
		end if

		if player[currentPlayer].type != TypeName[Debug Mode]
			DrawSpriteFX(object.frame, FX_ROTATE, player[currentPlayer].xpos, player[currentPlayer].ypos)
		end if
	end if
end event


event ObjectStartup

	LoadSpriteSheet("Global/Items.gif")

	// Goggle frames
	// There are only a couple of actual goggle sprites, most of these are the same thing but with different offsets
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(-4, -12, 12, 9, 118, 71)
	SpriteFrame(-7, -11, 15, 9, 118, 81)
	SpriteFrame(-7, -11, 15, 9, 118, 81)
	SpriteFrame(-7, -11, 15, 9, 118, 81)
	SpriteFrame(-7, -11, 15, 9, 118, 81)
	SpriteFrame(-7, -11, 15, 9, 118, 81)
	SpriteFrame(-7, -11, 15, 9, 118, 81)
	SpriteFrame(-4, -12, 12, 9, 118, 71)
	SpriteFrame(-5, -12, 12, 10, 127, 102)
	SpriteFrame(-6, -13, 12, 10, 127, 102)
	SpriteFrame(-4, -12, 12, 9, 118, 71)
	SpriteFrame(-1, -4, 14, 11, 150, 118)
	SpriteFrame(-1, 10, 9, 8, 140, 102)
	SpriteFrame(0, -11, 12, 9, 118, 71)
	SpriteFrame(0, -12, 12, 9, 118, 71)
	SpriteFrame(0, -11, 12, 9, 118, 71)
	SpriteFrame(3, -11, 8, 9, 118, 102)
	SpriteFrame(3, -12, 8, 9, 118, 102)
	SpriteFrame(3, -11, 8, 9, 118, 102)
	SpriteFrame(3, -9, 12, 9, 118, 71)
	SpriteFrame(3, -9, 12, 9, 118, 71)
	SpriteFrame(3, -9, 12, 9, 118, 71)
	SpriteFrame(3, -9, 12, 9, 118, 71)
	SpriteFrame(-9, -9, 15, 9, 118, 81)
	SpriteFrame(-9, -9, 15, 9, 118, 81)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(3, -7, 8, 9, 118, 102)
	SpriteFrame(-1, 3, 9, 8, 140, 102)
	SpriteFrame(-11, -2, 8, 9, 142, 92)
	SpriteFrame(-8, -11, 9, 8, 118, 123)
	SpriteFrame(-4, -17, 12, 10, 127, 102)
	SpriteFrame(-8, -10, 15, 9, 118, 81)
	SpriteFrame(-8, -10, 15, 9, 118, 81)
	SpriteFrame(9, -5, 12, 9, 118, 71)
	SpriteFrame(-8, -5, 16, 8, 118, 113)
	SpriteFrame(-21, -5, 12, 9, 130, 92)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(-4, -18, 12, 10, 127, 102)
	SpriteFrame(-5, -7, 15, 9, 118, 81)
	SpriteFrame(-5, -8, 15, 9, 118, 81)
	SpriteFrame(-5, -7, 15, 9, 118, 81)
	SpriteFrame(-5, -8, 15, 9, 118, 81)
	SpriteFrame(-10, -13, 15, 9, 118, 81)
	SpriteFrame(-8, -12, 15, 9, 118, 81)
	SpriteFrame(-3, -9, 12, 9, 118, 71)
	SpriteFrame(-3, -9, 12, 9, 118, 71)
	SpriteFrame(-13, -10, 14, 13, 135, 113)
	SpriteFrame(-12, -10, 14, 13, 135, 113)
	SpriteFrame(-6, -10, 12, 9, 118, 71)
	SpriteFrame(-9, -10, 16, 9, 118, 113)
	SpriteFrame(-9, -10, 16, 9, 118, 113)
	SpriteFrame(-8, -11, 16, 9, 118, 113)
	SpriteFrame(-5, -12, 12, 9, 118, 71)
	SpriteFrame(-2, 1, 12, 9, 118, 71)
	SpriteFrame(1, -11, 8, 9, 118, 102)
	SpriteFrame(-1, -13, 8, 9, 118, 102)
	SpriteFrame(-1, -13, 8, 9, 118, 102)
	SpriteFrame(-1, -12, 8, 9, 118, 102)
	SpriteFrame(1, -11, 8, 9, 118, 102)
	SpriteFrame(0, -13, 8, 9, 118, 102)
	SpriteFrame(-1, -13, 8, 9, 118, 102)
	SpriteFrame(-1, -11, 8, 9, 118, 102)
	SpriteFrame(3, -11, 8, 9, 118, 102)
	SpriteFrame(3, -11, 8, 9, 118, 102)
	SpriteFrame(3, -11, 8, 9, 118, 102)
	SpriteFrame(3, -11, 8, 9, 118, 102)
	SpriteFrame(-5, -11, 12, 9, 118, 71)
	SpriteFrame(-5, -11, 12, 9, 118, 71)
	SpriteFrame(-2, -15, 9, 8, 118, 123)
	SpriteFrame(-2, -15, 9, 8, 118, 123)
	SpriteFrame(-5, -10, 12, 9, 118, 71)
	SpriteFrame(-5, -10, 12, 9, 118, 71)
	SpriteFrame(4, -5, 12, 9, 118, 71)
	SpriteFrame(-8, -5, 16, 8, 118, 113)
	SpriteFrame(-15, -5, 12, 9, 130, 92)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(-2, -15, 12, 10, 127, 102)
	SpriteFrame(-5, -8, 15, 9, 118, 81)
	SpriteFrame(-5, -8, 15, 9, 118, 81)
	SpriteFrame(-5, -8, 15, 9, 118, 81)
	SpriteFrame(-5, -8, 15, 9, 118, 81)
	SpriteFrame(-9, -10, 16, 9, 118, 113)
	SpriteFrame(-9, -10, 16, 9, 118, 113)
	SpriteFrame(-14, -9, 14, 13, 135, 113)
	SpriteFrame(-13, -9, 14, 13, 135, 113)
	SpriteFrame(-1, -4, 12, 9, 118, 71)
	SpriteFrame(-1, -4, 12, 9, 118, 71)
	SpriteFrame(-1, -4, 12, 9, 118, 71)
	SpriteFrame(-1, -5, 12, 9, 118, 71)
	SpriteFrame(-1, -7, 12, 9, 118, 71)
	SpriteFrame(-1, -7, 12, 9, 118, 71)
	SpriteFrame(-1, -7, 12, 9, 118, 71)
	SpriteFrame(-1, -7, 12, 9, 118, 71)
	SpriteFrame(-1, -7, 12, 9, 118, 71)
	SpriteFrame(1, -5, 12, 9, 118, 71)
	SpriteFrame(1, -5, 12, 9, 118, 71)
	SpriteFrame(1, -5, 12, 9, 118, 71)
	SpriteFrame(-5, -17, 15, 9, 118, 81)
	SpriteFrame(-6, -16, 15, 9, 118, 81)
	SpriteFrame(-4, -17, 15, 9, 118, 81)
	SpriteFrame(-5, -16, 15, 9, 118, 81)
	SpriteFrame(-4, -16, 15, 9, 118, 81)
	SpriteFrame(-3, -15, 15, 9, 118, 81)
	SpriteFrame(-4, -15, 15, 9, 118, 81)
	SpriteFrame(-5, -15, 15, 9, 118, 81)
	SpriteFrame(-4, -15, 15, 9, 118, 81)
	SpriteFrame(-5, -15, 15, 9, 118, 81)
	SpriteFrame(-4, -15, 15, 9, 118, 81)
	SpriteFrame(7, -15, 8, 9, 118, 102)
	SpriteFrame(-5, -16, 15, 9, 118, 81)
	SpriteFrame(-4, -17, 15, 9, 118, 81)
	SpriteFrame(-5, -17, 15, 9, 118, 81)
	SpriteFrame(-5, -19, 12, 10, 127, 102)
	SpriteFrame(-7, -20, 12, 10, 127, 102)
	SpriteFrame(-5, -17, 15, 9, 118, 81)
	SpriteFrame(-3, -9, 12, 9, 118, 71)
	SpriteFrame(-2, -1, 12, 9, 118, 71)
	SpriteFrame(-1, -11, 12, 9, 118, 71)
	SpriteFrame(3, -12, 8, 9, 118, 102)
	SpriteFrame(3, -14, 8, 9, 118, 102)
	SpriteFrame(0, -12, 12, 9, 118, 71)
	SpriteFrame(-3, -12, 12, 9, 118, 71)
	SpriteFrame(-3, -13, 15, 9, 118, 81)
	SpriteFrame(-4, -14, 15, 9, 118, 81)
	SpriteFrame(-2, -13, 12, 9, 118, 71)
	SpriteFrame(-3, -12, 12, 9, 118, 71)
	SpriteFrame(-3, -12, 12, 9, 118, 71)
	SpriteFrame(-3, -12, 12, 9, 118, 71)
	SpriteFrame(-3, -12, 12, 9, 118, 71)
	SpriteFrame(-5, -13, 15, 9, 118, 81)
	SpriteFrame(-10, -12, 15, 9, 118, 81)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(2, -11, 8, 9, 118, 102)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(2, 1, 9, 8, 140, 102)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(-10, 2, 8, 9, 142, 92)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(-11, -10, 9, 8, 118, 123)
	SpriteFrame(-6, -17, 9, 8, 118, 123)
	SpriteFrame(-8, -16, 15, 9, 118, 81)
	SpriteFrame(-10, -13, 15, 9, 118, 81)
	SpriteFrame(2, -8, 12, 9, 118, 71)
	SpriteFrame(-2, -7, 15, 9, 118, 81)
	SpriteFrame(-7, -5, 16, 9, 118, 113)
	SpriteFrame(-13, -7, 15, 9, 69, 106)
	SpriteFrame(-14, -8, 12, 9, 130, 92)
	SpriteFrame(-14, -9, 8, 9, 60, 106)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(0, 0, 1, 1, 1, 1)
	SpriteFrame(6, -9, 8, 9, 118, 102)
	SpriteFrame(-3, -17, 15, 9, 118, 81)
	SpriteFrame(1, -13, 12, 9, 118, 71)
	SpriteFrame(-4, -14, 15, 9, 118, 81)
	SpriteFrame(1, -13, 12, 9, 118, 71)
	SpriteFrame(4, -14, 8, 9, 118, 102)
	SpriteFrame(1, -10, 12, 9, 118, 71)
	SpriteFrame(2, -15, 15, 9, 118, 81)
	SpriteFrame(5, -12, 16, 9, 118, 113)
	SpriteFrame(3, -26, 14, 13, 135, 113)
	SpriteFrame(7, -16, 6, 7, 128, 123)
	SpriteFrame(3, -16, 11, 10, 118, 91)
	SpriteFrame(-1, -22, 14, 13, 135, 113)
	SpriteFrame(4, -20, 14, 13, 135, 113)
	SpriteFrame(6, -18, 14, 13, 135, 113)
	SpriteFrame(5, -20, 14, 13, 135, 113)
	SpriteFrame(3, -21, 14, 13, 135, 113)
	SpriteFrame(3, -20, 14, 13, 135, 113)
	SpriteFrame(-13, -11, 11, 10, 118, 91)
	SpriteFrame(-12, -11, 11, 10, 118, 91)
	SpriteFrame(-7, -5, 16, 9, 118, 113)
	SpriteFrame(-2, -7, 15, 9, 118, 81)
	SpriteFrame(2, -8, 12, 9, 118, 71)
	SpriteFrame(2, -13, 12, 9, 118, 71)
	SpriteFrame(0, -17, 12, 9, 118, 71)
	SpriteFrame(3, -3, 12, 9, 118, 71)
	SpriteFrame(-4, -6, 15, 9, 118, 81)
	SpriteFrame(-12, -15, 12, 9, 118, 71)
	SpriteFrame(-13, -15, 12, 9, 118, 71)
	SpriteFrame(-12, -16, 12, 9, 118, 71)
	SpriteFrame(-12, -15, 12, 9, 118, 71)
	SpriteFrame(-13, -15, 12, 9, 118, 71)
	SpriteFrame(-12, -16, 12, 9, 118, 71)
	SpriteFrame(-4, -20, 8, 9, 118, 102)
	SpriteFrame(-3, -21, 8, 9, 118, 102)
	SpriteFrame(-8, -23, 15, 9, 118, 81)

	// Look for goggle objects placed in the current scene
	foreach (TypeName[Goggles], arrayPos0, ALL_ENTITIES)
		// Short explanation - placing goggles in a scene will allow Sonic to have goggles on start,
		//   but they won't function like normal goggles.
		//   Instead, they'll be purely cosmetic, which means that Sonic can still get hit and stuff
		//   However, even if he does get hit, he'll still keep the goggles on
		//   This feature is another unused part of this already unused object, but to utilise it,
		//   just place goggles anywhere in a scene

		// Move to the shield object slot
		arrayPos1 = playerCount

		// Reset currentPlayer/move to P1 slot
		currentPlayer = 0

		// Place some goggles in the shield slot and init its values
		ResetObjectEntity(arrayPos1, TypeName[Goggles], 0, 0, 0)
		object[arrayPos1].priority = PRIORITY_ACTIVE
		object[arrayPos1].targetPlayer = 0
		object[arrayPos1].drawOrder = -1

		// Blank out the placed goggle object
		ResetObjectEntity(arrayPos0, TypeName[Blank Object], 0, 0, 0)
	next

	// Set goggle type to the goggles
	// (Despite being in the global folder, this script only gets called in LZ so it's safe to do it here)
	goggleType = TypeName[Goggles]

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
