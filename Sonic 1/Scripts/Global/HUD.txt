// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: HUD Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias object.value0 : object.drawFunction
private alias object.value1 : object.flashTimer

private alias object.value0 : player.rings

// Game Modes Aliases
private alias 2 : MODE_TIMEATTACK

// Function declarations
reserve function HUD_DrawPC
reserve function HUD_DrawMobile

function HUD_DrawPC

	DrawSpriteScreenXY(10, 17, 13)

	if stage.minutes == 9
		if object.flashTimer > 7
			DrawSpriteScreenXY(11, 17, 29)
		end if
	end if

	if player[0].rings == 0
		if object.flashTimer > 7
			DrawSpriteScreenXY(12, 17, 45)
		end if
	end if

	DrawNumbers(0, 104, 13, player.score, 6, 8, 0)
	
	// If in time attack, draw extended time with mulliseconds
	if options.gameMode < MODE_TIMEATTACK
		DrawSpriteScreenXY(14, 67, 29)
	else
		DrawSpriteScreenXY(13, 67, 29)
		DrawNumbers(0, 104, 29, stage.milliSeconds, 2, 8, 1)
	end if
	
	DrawNumbers(0, 80, 29, stage.seconds, 2, 8, 1)
	DrawNumbers(0, 56, 29, stage.minutes, 1, 8, 1)
	DrawNumbers(0, 80, 45, player[0].rings, 3, 8, 0)

	if stage.debugMode == true
		// If the player is in debug mode, draw X and Y positions

		// First get the absolute X pos value, truncated down to essentially ixpos
		temp0 = object[0].xpos
		temp0 >>= 16
		Abs(temp0)

		// Get position to draw it
		temp1 = screen.xsize
		temp1 -= 24

		// Draw the XPos value
		DrawNumbers(0, temp1, 13, temp0, 5, 8, 1)

		// Then get absolute Y pos value, also truncated down to iypos
		temp0 = object[0].ypos
		temp0 >>= 16
		Abs(temp0)

		// Draw the YPos value
		DrawNumbers(0, temp1, 29, temp0, 5, 8, 1)

		temp1 -= 42

		// If XPos is in the negatives, draw the red version of the "X:" icon
		if object[0].xpos >= 0
			DrawSpriteScreenXY(18, temp1, 15)
		else
			DrawSpriteScreenXY(36, temp1, 15)
		end if

		// Same for YPos - if negative, draw red version of "Y:" icon
		if object[0].ypos >= 0
			DrawSpriteScreenXY(19, temp1, 31)
		else
			DrawSpriteScreenXY(37, temp1, 31)
		end if
	end if

	// Draw life indicator
	temp0 = stage.playerListPos
	temp0 += 15
	DrawSpriteScreenXY(temp0, 16, 212)
	temp0 += 6
	DrawSpriteScreenXY(temp0, 33, 213)
	DrawSpriteScreenXY(20, 38, 222)
	DrawNumbers(24, 56, 220, player.lives, 2, 8, 0)

end function


function HUD_DrawMobile
	DrawSpriteScreenXY(10, 17, 9)
	if stage.minutes == 9
		if object.flashTimer > 7
			DrawSpriteScreenXY(11, 17, 25)
		end if
	end if

	if player[0].rings == 0
		if object.flashTimer > 7
			DrawSpriteScreenXY(12, 17, 41)
		end if
	end if

	DrawNumbers(0, 104, 9, player.score, 6, 8, 0)
	if options.gameMode < MODE_TIMEATTACK
		DrawSpriteScreenXY(14, 67, 25)
	else
		DrawSpriteScreenXY(13, 67, 25)
		DrawNumbers(0, 104, 25, stage.milliSeconds, 2, 8, 1)
	end if
	DrawNumbers(0, 80, 25, stage.seconds, 2, 8, 1)
	DrawNumbers(0, 56, 25, stage.minutes, 1, 8, 1)
	DrawNumbers(0, 80, 41, player[0].rings, 3, 8, 0)

	if object[0].type == TypeName[Debug Mode]
		temp0 = object[0].xpos
		temp0 >>= 16
		Abs(temp0)
		temp1 = screen.xsize
		temp1 -= 16
		DrawNumbers(0, temp1, 25, temp0, 5, 8, 1)
		temp0 = object[0].ypos
		temp0 >>= 16
		Abs(temp0)
		DrawNumbers(0, temp1, 41, temp0, 5, 8, 1)
		temp1 -= 42
		if object[0].xpos >= 0
			DrawSpriteScreenXY(18, temp1, 27)
		else
			DrawSpriteScreenXY(36, temp1, 27)
		end if
		if object[0].ypos >= 0
			DrawSpriteScreenXY(19, temp1, 43)
		else
			DrawSpriteScreenXY(37, temp1, 43)
		end if
		DrawSpriteScreenXY(34, screen.xcenter, 16)
		DrawSpriteScreenXY(35, screen.xcenter, 16)
	end if
	temp1 = screen.xsize
	temp1 -= 64
	temp0 = stage.playerListPos
	temp0 += 15
	DrawSpriteScreenXY(temp0, temp1, 8)
	temp1 += 17
	temp0 += 6
	DrawSpriteScreenXY(temp0, temp1, 9)
	temp1 += 5
	DrawSpriteScreenXY(20, temp1, 18)
	temp1 += 18
	DrawNumbers(24, temp1, 16, player.lives, 2, 8, 0)
end function


event ObjectDraw
	// Progress HUD flashing
	// 0 ring flashing takes priority over time over flashing
	if player[0].rings == 0
		object.flashTimer++
		if object.flashTimer == 16
			object.flashTimer = 0
		end if
	else
		if stage.minutes == 9
			object.flashTimer++
			if object.flashTimer == 16
				object.flashTimer = 0
			end if
		end if
	end if
	CallFunction(object.drawFunction)
end event


event ObjectStartup

	LoadSpriteSheet("Global/Display.gif")

	// HUD frames
	SpriteFrame(0, 0, 8, 11, 1, 50) 	// 0  - Number 0
	SpriteFrame(0, 0, 8, 11, 10, 50) 	// 1  - Number 1
	SpriteFrame(0, 0, 8, 11, 19, 50) 	// 2  - Number 2
	SpriteFrame(0, 0, 8, 11, 28, 50) 	// 3  - Number 3
	SpriteFrame(0, 0, 8, 11, 1, 62) 	// 4  - Number 4
	SpriteFrame(0, 0, 8, 11, 10, 62) 	// 5  - Number 5
	SpriteFrame(0, 0, 8, 11, 19, 62) 	// 6  - Number 6
	SpriteFrame(0, 0, 8, 11, 28, 62) 	// 7  - Number 7
	SpriteFrame(0, 0, 8, 11, 1, 74) 	// 8  - Number 8
	SpriteFrame(0, 0, 8, 11, 10, 74) 	// 9  - Number 9
	SpriteFrame(0, 0, 39, 43, 1, 1) 	// 10 - Score, Times, Ring text
	SpriteFrame(0, 0, 31, 11, 1, 119) 	// 11 - Red Time text
	SpriteFrame(0, 0, 39, 11, 1, 131) 	// 12 - Red Rings text
	SpriteFrame(0, 0, 29, 4, 1, 45) 	// 13 - Timer ticks
	SpriteFrame(0, 0, 3, 11, 37, 50) 	// 14 - : (Colon)
	SpriteFrame(0, 0, 16, 16, 43, 107) 	// 15 - Sonic life icon
	SpriteFrame(0, 0, 16, 16, 60, 107) 	// 16 - Tails life icon
	SpriteFrame(0, 0, 16, 16, 77, 107) 	// 17 - Knuckles life icon
	SpriteFrame(0, 0, 8, 8, 1, 98) 		// 18 - Yellow "X" debug icon
	SpriteFrame(0, 0, 8, 8, 10, 98) 	// 19 - Yellow "Y" debug icon
	SpriteFrame(0, 0, 6, 6, 19, 98) 	// 20 - White small x debug icon
	SpriteFrame(0, 0, 31, 7, 144, 43) 	// 21 - Sonic name tag

	// Determine between Tails or Mile sbased on region setting
	if options.region == 0
		SpriteFrame(0, 0, 31, 7, 176, 43) 	// 22 - Tails name tag
	else
		SpriteFrame(0, 0, 31, 7, 176, 51) 	// 22 - Miles name tag
	end if

	SpriteFrame(0, 0, 31, 7, 144, 51) 	// 23 - Knuckles name tag
	SpriteFrame(0, 0, 8, 8, 37, 64) 	// 24 - Small number 0
	SpriteFrame(0, 0, 8, 8, 46, 64) 	// 25 - Small number 1
	SpriteFrame(0, 0, 8, 8, 55, 64) 	// 26 - Small number 2
	SpriteFrame(0, 0, 8, 8, 64, 64) 	// 27 - Small number 3
	SpriteFrame(0, 0, 8, 8, 73, 64) 	// 28 - Small number 4
	SpriteFrame(0, 0, 8, 8, 82, 64) 	// 29 - Small number 5
	SpriteFrame(0, 0, 8, 8, 91, 64) 	// 30 - Small number 6
	SpriteFrame(0, 0, 8, 8, 100, 64) 	// 31 - Small number 7
	SpriteFrame(0, 0, 8, 8, 109, 64) 	// 32 - Small number 8
	SpriteFrame(0, 0, 8, 8, 118, 64) 	// 33 - Small number 9
	SpriteFrame(-16, 0, 8, 8, 127, 64) 	// 34 - Small debug minus sign
	SpriteFrame(8, 0, 8, 8, 136, 64) 	// 35 - Small debug plus sign
	SpriteFrame(0, 0, 8, 8, 145, 64) 	// 36 - Red "X" debug icon
	SpriteFrame(0, 0, 8, 8, 154, 64) 	// 37 - Red "Y" debug icon

	foreach (TypeName[HUD], arrayPos0, ALL_ENTITIES)
		if engine.deviceType == RETRO_STANDARD
			object[arrayPos0].drawFunction = HUD_DrawPC
		else
			object[arrayPos0].drawFunction = HUD_DrawMobile
		end if
	next

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(0, 0, 39, 43, 1, 1)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
