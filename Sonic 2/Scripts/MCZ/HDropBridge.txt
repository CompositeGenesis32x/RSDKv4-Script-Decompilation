// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: H Drop Bridge Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================
private alias object.value1 : object.angle.left
private alias object.value2 : object.angle.right
private alias object.value3 : object.startPos
private alias object.value4 : object.endPos

private alias 0 : HDROPBRIDGE_CLOSED
private alias 1 : HDROPBRIDGE_OPENING
private alias 2 : HDROPBRIDGE_OPENED

// Activator switch alias
private alias object.propertyValue : pullSwitch.pulled

// ========================
// Function Declarations
// ========================
reserve function HDropBridge_DebugDraw
reserve function HDropBridge_DebugSpawn

function HDropBridge_DebugDraw
	temp0 = object.xpos
	temp1 = 0
	temp0 -= 0x380000
	while temp1 < 8
		DrawSpriteXY(0, temp0, object.ypos)
		temp0 += 0x100000
		temp1++
	loop
end function


function HDropBridge_DebugSpawn
	CreateTempObject(TypeName[H Drop Bridge], 0, object.xpos, object.ypos)
	object[tempObjectPos].drawOrder = 4
	object[tempObjectPos].angle.left = 0
	object[tempObjectPos].angle.right = 256
	object[tempObjectPos].startPos = object[tempObjectPos].xpos
	object[tempObjectPos].startPos -= 0x380000
	object[tempObjectPos].endPos = object[tempObjectPos].xpos
	object[tempObjectPos].endPos += 0x380000
end function


// ========================
// Events
// ========================

event ObjectMain
	switch object.state
	case HDROPBRIDGE_CLOSED
		// object[-1] is a switch of either the normal or vine variety
		if pullSwitch[-1].pulled == true
			object.state++
			PlaySfx(SfxName[Flapping Door], false)
			if object.priority != PRIORITY_XBOUNDS_DESTROY
				object.priority = PRIORITY_ACTIVE
			end if
		end if

		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			BoxCollisionTest(C_BOX, object.entityPos, -64, -8, 64, 8, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
		next
		break

	case HDROPBRIDGE_OPENING
		if object.angle.left < 128
			object.angle.left += 8
			object.angle.right -= 8
		else
			object.state++
		end if
		// [Fallthrough]
	case HDROPBRIDGE_OPENED
		temp6 = object.xpos
		temp7 = object.ypos

		temp0 = 0
		temp1 = 0
		while temp0 < 4
			Cos(object.xpos, object.angle.left)
			object.xpos *= temp1
			object.xpos += object.startPos
			Sin(object.ypos, object.angle.left)
			object.ypos *= temp1
			object.ypos += temp7
			foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
				BoxCollisionTest(C_BOX, object.entityPos, -8, -8, 8, 8, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			next
			temp0++
			temp1 += 0x800
		loop

		temp0 = 0
		temp1 = 0
		while temp0 < 4
			Cos(object.xpos, object.angle.right)
			object.xpos *= temp1
			object.xpos += object.endPos
			Sin(object.ypos, object.angle.right)
			object.ypos *= temp1
			object.ypos += temp7
			foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
				BoxCollisionTest(C_BOX, object.entityPos, -8, -8, 8, 8, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			next
			temp0++
			temp1 += 0x800
		loop
		object.xpos = temp6
		object.ypos = temp7
		break

	end switch

	if object.outOfBounds == true
		if object.priority != PRIORITY_XBOUNDS_DESTROY
			object.angle.left = 0
			object.angle.right = 256
			object.state = HDROPBRIDGE_CLOSED
		end if
	end if
end event


event ObjectDraw
	// Draw the left 4 pieces first
	temp0 = 0
	temp1 = 0
	while temp0 < 4
		Cos(temp2, object.angle.left)
		temp2 *= temp1
		temp2 += object.startPos
		Sin(temp3, object.angle.left)
		temp3 *= temp1
		temp3 += object.ypos
		DrawSpriteXY(0, temp2, temp3)
		temp0++
		temp1 += 0x800
	loop

	// Then draw the right 4 pieces afterwards
	temp0 = 0
	temp1 = 0
	while temp0 < 4
		Cos(temp2, object.angle.right)
		temp2 *= temp1
		temp2 += object.endPos
		Sin(temp3, object.angle.right)
		temp3 *= temp1
		temp3 += object.ypos
		DrawSpriteXY(0, temp2, temp3)
		temp0++
		temp1 += 0x800
	loop
end event


event ObjectStartup
	LoadSpriteSheet("MCZ/Objects.gif")

	SpriteFrame(-8, -8, 16, 16, 135, 131)

	foreach (TypeName[H Drop Bridge], arrayPos0, ALL_ENTITIES)
		object[arrayPos0].drawOrder = 4
		object[arrayPos0].angle.left = 0
		object[arrayPos0].angle.right = 256
		object[arrayPos0].startPos = object[arrayPos0].xpos
		object[arrayPos0].startPos -= 0x380000
		object[arrayPos0].endPos = object[arrayPos0].xpos
		object[arrayPos0].endPos += 0x380000
	next

	// Add this object to the debug item list
	SetTableValue(TypeName[H Drop Bridge], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(HDropBridge_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(HDropBridge_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
end event


// ========================
// Editor Events
// ========================

event RSDKDraw
	temp0 = 0
	temp1 = 0
	while temp0 < 4
		Cos(temp2, 0)
		temp2 *= temp1
		temp2 += object.xpos
		temp2 -= 0x380000
		Sin(temp3, 0)
		temp3 *= temp1
		temp3 += object.ypos
		DrawSpriteXY(0, temp2, temp3)
		temp0++
		temp1 += 0x800
	loop

	temp0 = 0
	temp1 = 0
	while temp0 < 4
		Cos(temp2, 256)
		temp2 *= temp1
		temp2 += object.xpos
		temp2 += 0x380000
		Sin(temp3, 256)
		temp3 *= temp1
		temp3 += object.ypos
		DrawSpriteXY(0, temp2, temp3)
		temp0++
		temp1 += 0x800
	loop

	if editor.showGizmos == true
		editor.drawingOverlay = true

		// Draw a semi-transparent version of the bridge's "destination"

		object.inkEffect = INK_BLEND

		temp0 = 0
		temp1 = 0
		while temp0 < 4
			Cos(temp2, 128)
			temp2 *= temp1
			temp2 += object.xpos
			temp2 -= 0x380000
			Sin(temp3, 128)
			temp3 *= temp1
			temp3 += object.ypos
			DrawSpriteXY(0, FX_INK, temp2, temp3)
			temp0++
			temp1 += 0x800
		loop

		temp0 = 0
		temp1 = 0
		while temp0 < 4
			Cos(temp2, 128)
			temp2 *= temp1
			temp2 += object.xpos
			temp2 += 0x380000
			Sin(temp3, 128)
			temp3 *= temp1
			temp3 += object.ypos
			DrawSpriteXY(0, FX_INK, temp2, temp3)
			temp0++
			temp1 += 0x800
		loop

		editor.drawingOverlay = false
	end if
end event


event RSDKLoad
	LoadSpriteSheet("MCZ/Objects.gif")
	SpriteFrame(-8, -8, 16, 16, 135, 131)

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
