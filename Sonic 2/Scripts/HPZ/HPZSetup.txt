// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: HPZ Setup Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias object.value9  : object.clrDivisor_R
private alias object.value10 : object.clrDivisor_G
private alias object.value11 : object.clrDivisor_B
private alias object.value12 : object.waterClrDivisor_R
private alias object.value13 : object.waterClrDivisor_G
private alias object.value14 : object.waterClrDivisor_B

private alias object.value8  : object.orbFrameTimer
private alias object.value16 : object.waterfallLoopTimer
private alias object.value17 : object.playingWaterfallLoop

private alias 1 : TILE_WATERSLIDE


// Tracks
private alias 0 : TRACK_STAGE
private alias 1 : TRACK_ACTFINISH
private alias 2 : TRACK_INVINCIBLE
private alias 3 : TRACK_CONTINUE
private alias 4 : TRACK_BOSS
private alias 5 : TRACK_GAMEOVER
private alias 6 : TRACK_DROWNING
private alias 7 : TRACK_SUPER

// Music Events
private alias 25 : SLOT_MUSICEVENT_CHANGE
private alias 26 : SLOT_MUSICEVENT_BOSS

private alias  0 : MUSICEVENT_FADETOBOSS
private alias  1 : MUSICEVENT_FADETOSTAGE
private alias  2 : MUSICEVENT_TRANSITION

private alias 0 : MUSICEVENT_FLAG_NOCHANGE
private alias 1 : MUSICEVENT_FLAG_SPEEDUP
private alias 2 : MUSICEVENT_FLAG_SLOWDOWN

// Function declarations
reserve function HPZSetup_getClrDivisor
reserve function HPZSetup_InitSuperSonicPal
reserve function HPZSetup_InitSuperTailsPal
reserve function HPZSetup_InitSuperKnuxPal
reserve function HPZSetup_SpeedUpMusic
reserve function HPZSetup_SlowDownMusic

// Static Values
public value HPZSetup_value33 = 0;
public value HPZSetup_value34 = 0;
public value HPZSetup_value35 = 0;
public value HPZSetup_value36 = false

private alias HPZSetup_value33 : Water_flashTimer
private alias HPZSetup_value34 : HPZSetup_bossFightActive
private alias HPZSetup_value35 : HPZSetup_glowingOrbFrame
private alias HPZSetup_value36 : HPZSetup_hasAchievement

// Tables
public table HPZSetup_table38
	768, 18, 770, 9, 772, 18, 770, 9
end table

public table HPZSetup_table39
	774, 18, 776, 9, 778, 18, 776, 9
end table

public table HPZSetup_table40
	780, 18, 783, 9, 786, 18, 783, 9
end table

public table HPZSetup_table41
	789, 18, 792, 9, 795, 18, 792, 9
end table

public table HPZSetup_orbFrameTable
	0, 0, 1, 2, 3, 3, 2, 1, 2, 3, 3, 2, 1, 0
end table

// Wacky function to take a normal color and turn it into an underwater color
function HPZSetup_getClrDivisor
	// Regular Colour
	object.clrDivisor_R = temp1
	object.clrDivisor_R >>= 16

	object.clrDivisor_G = temp1
	object.clrDivisor_G >>= 8
	object.clrDivisor_G &= 0xFF

	object.clrDivisor_B = temp1
	object.clrDivisor_B &= 0xFF

	// Underwater Colour
	object.waterClrDivisor_R = temp2
	object.waterClrDivisor_R >>= 16

	object.waterClrDivisor_G = temp2
	object.waterClrDivisor_G >>= 8
	object.waterClrDivisor_G &= 0xFF

	object.waterClrDivisor_B = temp2
	object.waterClrDivisor_B &= 0xFF

	// Minimum of 1 (you cant divide by zero)
	if object.waterClrDivisor_R == 0
		object.waterClrDivisor_R = 1
	end if

	if object.waterClrDivisor_G == 0
		object.waterClrDivisor_G = 1
	end if

	if object.waterClrDivisor_B == 0
		object.waterClrDivisor_B = 1
	end if

	object.clrDivisor_R <<= 8
	object.clrDivisor_G <<= 8
	object.clrDivisor_B <<= 8
	object.clrDivisor_R /= object.waterClrDivisor_R
	object.clrDivisor_G /= object.waterClrDivisor_G
	object.clrDivisor_B /= object.waterClrDivisor_B

	if object.clrDivisor_R == 0
		object.clrDivisor_R = 0x100
	end if

	if object.clrDivisor_G == 0
		object.clrDivisor_G = 0x100
	end if

	if object.clrDivisor_B == 0
		object.clrDivisor_B = 0x100
	end if
end function


function HPZSetup_InitSuperSonicPal
	temp0 = 0
	
	// First Set of colours is just the regular underwater palette
	GetPaletteEntry(1, 2, temp1)
	SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
	temp0++

	GetPaletteEntry(1, 3, temp1)
	SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
	temp0++

	GetPaletteEntry(1, 4, temp1)
	SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
	temp0++

	GetPaletteEntry(1, 5, temp1)
	SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
	temp0++

	CopyPalette(1, 0, 4, 2, 4)
	while temp0 < 64
		GetTableValue(temp1, temp0, PlayerObject_SonicSuperPal)
		SetPaletteEntry(3, 0, temp1)
		temp0++

		GetTableValue(temp1, temp0, PlayerObject_SonicSuperPal)
		SetPaletteEntry(3, 1, temp1)
		temp0++

		GetTableValue(temp1, temp0, PlayerObject_SonicSuperPal)
		SetPaletteEntry(3, 2, temp1)
		temp0++

		GetTableValue(temp1, temp0, PlayerObject_SonicSuperPal)
		SetPaletteEntry(3, 3, temp1)
		temp0 -= 3

		// Just mix the 2 palettes, we'll use the results as our new colours
		SetPaletteFade(5, 3, 4, 48, 0, 4)

		GetPaletteEntry(5, 0, temp1)
		SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
		temp0++

		GetPaletteEntry(5, 1, temp1)
		SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
		temp0++

		GetPaletteEntry(5, 2, temp1)
		SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
		temp0++

		GetPaletteEntry(5, 3, temp1)
		SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
		temp0++
	loop
end function


function HPZSetup_InitSuperTailsPal
	temp0 = 0

	GetPaletteEntry(1, 13, temp1)
	SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
	temp0++

	GetPaletteEntry(1, 17, temp1)
	SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
	temp0++

	GetPaletteEntry(1, 18, temp1)
	SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
	temp0++

	GetPaletteEntry(1, 16, temp1)
	SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
	temp0++

	while temp0 < 24
		GetPaletteEntry(0, 13, temp1)
		GetPaletteEntry(1, 13, temp2)

		CallFunction(HPZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_TailsSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0xF8
		temp1 /= object.clrDivisor_R

		temp2 *= 0xF8
		temp2 /= object.clrDivisor_G

		temp3 *= 0xF8
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
		temp0++


		GetPaletteEntry(0, 17, temp1)
		GetPaletteEntry(1, 17, temp2)

		CallFunction(HPZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_TailsSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0x100
		temp1 /= object.clrDivisor_R

		temp2 *= 0x100
		temp2 /= object.clrDivisor_G

		temp3 *= 0x100
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
		temp0++


		GetPaletteEntry(0, 18, temp1)
		GetPaletteEntry(1, 18, temp2)

		CallFunction(HPZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_TailsSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0x100
		temp1 /= object.clrDivisor_R

		temp2 *= 0x100
		temp2 /= object.clrDivisor_G

		temp3 *= 0x100
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
		temp0++


		GetPaletteEntry(0, 16, temp1)
		GetPaletteEntry(1, 16, temp2)

		CallFunction(HPZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_TailsSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0x100
		temp1 /= object.clrDivisor_R

		temp2 *= 0x100
		temp2 /= object.clrDivisor_G

		temp3 *= 0x100
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if
		
		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
		temp0++
	loop
end function


function HPZSetup_InitSuperKnuxPal
	temp0 = 0

	GetPaletteEntry(1, 26, temp1)
	SetTableValue(temp1, temp0, PlayerObject_KnuxSuperAltPal)
	temp0++

	GetPaletteEntry(1, 27, temp1)
	SetTableValue(temp1, temp0, PlayerObject_KnuxSuperAltPal)
	temp0++

	GetPaletteEntry(1, 28, temp1)
	SetTableValue(temp1, temp0, PlayerObject_KnuxSuperAltPal)
	temp0++
end function


function HPZSetup_SpeedUpMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult

	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, 2)
	temp0 &= checkResult

	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult

	if temp0 == 0
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, 30897)
			SwapMusicTrack("MysticCave2_F.ogg", TRACK_STAGE, 15272, 8000)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("MysticCave2_F.ogg", TRACK_STAGE, 15272)
			SwapMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, 30897, 8000)
			break

		case TRACK_BOSS
		case TRACK_DROWNING
		case TRACK_SUPER
			SetMusicTrack("MysticCave2_F.ogg", TRACK_STAGE, 15272)
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, 30897)
			break

		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SPEEDUP
	end if

end function


function HPZSetup_SlowDownMusic

	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult

	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, 2)
	temp0 &= checkResult

	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult

	if temp0 == 0
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, 38679)
			SwapMusicTrack("MysticCave2.ogg", TRACK_STAGE, 18672, 12500)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("MysticCave2.ogg", TRACK_STAGE, 18672)
			SwapMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, 38679, 12500)
			break

		case TRACK_BOSS
		case TRACK_DROWNING
		case TRACK_SUPER
			SetMusicTrack("MysticCave2.ogg", TRACK_STAGE, 18672)
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, 38679)
			break

		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SLOWDOWN
	end if

end function


event ObjectMain
	if stage.actNum == 1
		// If in act 1, set the correct water level for before and after the boss arena
		if object[0].xpos > 0xE800000
			stage.newWaterLevel = 0x6140000
		else
			stage.newWaterLevel = 0x74C0000
		end if
	end if

	object.value0++
	if object.value0 == 2
		tileLayer[0].deformationOffsetW++
	end if

	if object.value0 == 4
		tileLayer[0].deformationOffsetW++
		tileLayer[1].deformationOffsetW++
		object.value0 = 0
	end if

	object.value1++
	if object.value1 == 5
		object.value1 = 0
		RotatePalette(0, 185, 188, true)
	end if

	if object.value2 < 2
		GetTableValue(temp0, object.value3, HPZSetup_table38)
		Copy16x16Tile(738, temp0)
		temp0++
		Copy16x16Tile(739, temp0)
		GetTableValue(temp0, object.value3, HPZSetup_table39)
		Copy16x16Tile(744, temp0)
		temp0++
		Copy16x16Tile(745, temp0)
		GetTableValue(temp0, object.value3, HPZSetup_table40)
		Copy16x16Tile(750, temp0)
		temp0++
		Copy16x16Tile(751, temp0)
		temp0++
		Copy16x16Tile(752, temp0)
		GetTableValue(temp0, object.value3, HPZSetup_table41)
		Copy16x16Tile(759, temp0)
		temp0++
		Copy16x16Tile(760, temp0)
		temp0++
		Copy16x16Tile(761, temp0)
		object.value3++
		GetTableValue(object.value2, object.value3, HPZSetup_table38)
		object.value3++
		object.value3 &= 7
	else
		object.value2--
	end if

	if object.value4 < 2
		GetTableValue(temp0, object.value5, HPZSetup_table38)
		Copy16x16Tile(740, temp0)
		temp0++
		Copy16x16Tile(741, temp0)
		GetTableValue(temp0, object.value5, HPZSetup_table39)
		Copy16x16Tile(746, temp0)
		temp0++
		Copy16x16Tile(747, temp0)
		GetTableValue(temp0, object.value5, HPZSetup_table40)
		Copy16x16Tile(753, temp0)
		temp0++
		Copy16x16Tile(754, temp0)
		temp0++
		Copy16x16Tile(755, temp0)
		GetTableValue(temp0, object.value5, HPZSetup_table41)
		Copy16x16Tile(762, temp0)
		temp0++
		Copy16x16Tile(763, temp0)
		temp0++
		Copy16x16Tile(764, temp0)
		object.value5++
		GetTableValue(object.value4, object.value5, HPZSetup_table38)
		object.value5++
		object.value5 &= 7
	else
		object.value4--
	end if

	if object.value6 < 2
		GetTableValue(temp0, object.value7, HPZSetup_table38)
		Copy16x16Tile(742, temp0)
		temp0++

		Copy16x16Tile(743, temp0)
		GetTableValue(temp0, object.value7, HPZSetup_table39)
		Copy16x16Tile(748, temp0)
		temp0++

		Copy16x16Tile(749, temp0)
		GetTableValue(temp0, object.value7, HPZSetup_table40)
		Copy16x16Tile(756, temp0)
		temp0++

		Copy16x16Tile(757, temp0)
		temp0++

		Copy16x16Tile(758, temp0)
		GetTableValue(temp0, object.value7, HPZSetup_table41)
		Copy16x16Tile(765, temp0)
		temp0++

		Copy16x16Tile(766, temp0)
		temp0++

		Copy16x16Tile(767, temp0)

		object.value7++
		GetTableValue(object.value6, object.value7, HPZSetup_table38)
		object.value7++
		object.value7 &= 7
	else
		object.value6--
	end if

	if Water_flashTimer > 0
		Water_flashTimer--
	end if

	temp0 = object.orbFrameTimer
	temp0 /= 6
	GetTableValue(HPZSetup_glowingOrbFrame, temp0, HPZSetup_orbFrameTable)
	object.orbFrameTimer++
	object.orbFrameTimer %= 84

	// Check for waterslide
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		temp1 = object[currentPlayer].xpos
		temp1 >>= 16
		temp2 = object[currentPlayer].ypos
		temp2 >>= 16
		temp2 += object[currentPlayer].collisionBottom
		temp2--
		if object[currentPlayer].gravity == GRAVITY_GROUND
			Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEB)
			if temp0 == TILE_WATERSLIDE
				object[currentPlayer].state = PlayerObject_Waterslide
				object[currentPlayer].direction = FLIP_NONE
			end if
		end if
	next

	// Waterslide Sfx
	if object[0].state == PlayerObject_Waterslide
		if object.waterfallLoopTimer == 0
			if object.playingWaterfallLoop == false
				PlaySfx(SfxName[Waterfall], false)
				StopSfx(SfxName[Waterfall Loop])
				object.playingWaterfallLoop = true
			else
				StopSfx(SfxName[Waterfall])
				PlaySfx(SfxName[Waterfall Loop], false)
			end if
		end if
		object.waterfallLoopTimer++
		object.waterfallLoopTimer &= 0x3F
	else
		if object.waterfallLoopTimer != 0
			object.waterfallLoopTimer++
			object.waterfallLoopTimer &= 0x3F
		else
			object.waterfallLoopTimer = 0
			object.playingWaterfallLoop = false
		end if
	end if

	if HPZSetup_hasAchievement == false
		if stage.debugMode == false
			if options.stageSelectFlag == false
				if object[30].type == TypeName[Act Finish]
					HPZSetup_hasAchievement = true
					CallNativeFunction2(SetAchievement, AchievementName[A Secret Revealed], 100)
				end if
			end if
		end if
	end if
end event


event ObjectDraw
	temp0 = stage.waterLevel
	temp0 -= screen.yoffset
	if temp0 < 0
		temp0 = 0
	end if

	if temp0 > screen.ysize
		temp0 = screen.ysize
	end if
	
	SetActivePalette(0, 0, temp0)
	if Water_flashTimer > 0
		SetActivePalette(2, temp0, screen.ysize)
	else
		SetActivePalette(1, temp0, screen.ysize)
	end if

	AddDrawListEntityRef(2, object.entityPos)
end event


event ObjectStartup
	if stage.actNum == 1
		// Normal Hidden Palace Zone
		SetMusicTrack("MysticCave2.ogg", TRACK_STAGE, 18671) // why is this one 1 sample less than the loopPoint found in HPZSetup_SlowDownMusic...?
		SpeedUpMusic = HPZSetup_SpeedUpMusic
		SlowDownMusic = HPZSetup_SlowDownMusic
	else
		// Proto Palace Zone
		SetMusicTrack("Extra.ogg", TRACK_STAGE, 59852)
	end if

	if stage.player2Enabled == true
		object[1].xpos = object[0].xpos
	end if

	animalType1 = TypeName[Rocky]
	animalType2 = TypeName[Mocky]

	SetPaletteEntry(0, 192, 0x000000)

	object[10].type = TypeName[HPZ Setup]
	object[10].priority = PRIORITY_ACTIVE
	object[10].drawOrder = 0
	object[10].value5 = 2
	object[10].value7 = 4

	// Load the water palette
	LoadPalette("HPZ_WaterPal.act", 1, 0, 0, 256)

	// Initialize the Super palettes
	CallFunction(HPZSetup_InitSuperSonicPal)
	CallFunction(HPZSetup_InitSuperTailsPal)
	CallFunction(HPZSetup_InitSuperKnuxPal)

	// Load the electric flash palette in case the player gets an eletric shield
	LoadPalette("ElectricFlash.act", 2, 0, 0, 256)

	Water_flashTimer = 0
	HPZSetup_bossFightActive = false

	// Make the next stage OOZ
	stage.listPos = 20
	stage.activeList = REGULAR_STAGE

	SetLayerDeformation(1, 64, 2, 0, 0, 0)

	temp0 = 0
	while temp0 < 0x100
		Rand(temp1, 4)
		SetLayerDeformation(3, 16, temp1, 1, temp0, 16)
		temp0 += 16
	loop
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
