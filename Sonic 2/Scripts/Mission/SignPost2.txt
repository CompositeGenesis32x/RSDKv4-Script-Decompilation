// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: Sign Post2 Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================
private alias 87 : TYPE_SIGNPOST2

// ========================
// Function declarations
// ========================

reserve function SignPost2_DebugDraw
reserve function SignPost2_DebugSpawn

// ========================
// Static Values
// ========================

// ========================
// Tables
// ========================

public function SignPost2_DebugDraw
	DrawSprite(0)
	DrawSprite(1)
end function


public function SignPost2_DebugSpawn
	CreateTempObject(TypeName[Sign Post2], 0, object.xpos, object.ypos)
	object[tempObjectPos].frame = 1
	object[tempObjectPos].value1 = 16
	if options.vsMode == 1
		object[tempObjectPos].state = 3
	end if
end function


event ObjectUpdate
	switch object.state
	case 0
		temp0 = object.ypos
		temp0 += 0x400000
		if object[0].ypos < temp0
			if object.value6 > 0
				temp0 = object.ixpos
				temp0 -= object[0].ixpos
				CheckGreater(temp0, 0)
				temp1 = checkResult
				CheckLower(temp0, object.value6)
				checkResult &= temp1
				if checkResult == 1
					stage.newXBoundary1 = object.ixpos
					stage.newXBoundary1 -= object.value6
					stage.newXBoundary2 = object.xpos
					stage.newXBoundary2 >>= 16
					stage.newXBoundary2 += screen.xcenter
				end if
			else
				stage.newXBoundary1 = object.xpos
				stage.newXBoundary1 >>= 16
				stage.newXBoundary1 -= screen.xcenter
				stage.newXBoundary1 -= screen.xcenter
				stage.newXBoundary2 = object.xpos
				stage.newXBoundary2 >>= 16
				stage.newXBoundary2 += screen.xcenter
			end if
			if object[0].xpos > object.xpos
				stage.newXBoundary1 = object.xpos
				stage.newXBoundary1 >>= 16
				stage.newXBoundary1 -= screen.xcenter
				switch object[0].propertyValue
				case 0
					EditFrame(5, -24, -16, 48, 32, 34, 1)
					break
				case 1
					EditFrame(5, -24, -16, 48, 32, 34, 34)
					break
				case 2
					EditFrame(5, -24, -16, 48, 32, 34, 67)
					break
				end switch
				if stage.debugMode == 0
					if stage.activeList == BONUS_STAGE
						if stage.minutes < 7
							CallNativeFunction2(SetAchievement, 10, 100)
						end if
					else
						if stage.listPos == 0
							if stage.minutes == 0
								if stage.seconds < 35
									CallNativeFunction2(SetAchievement, 0, 100)
								end if
							end if
						end if
					end if
				end if
				CallNativeFunction2(NotifyCallback, NOTIFY_TOUCH_SIGNPOST, 0)
				stage.timeEnabled = 0
				object.state = 1
				PlaySfx(SfxName[Sign Post], 0)
				if PlayerObject_value0 == 1
					PlayerObject_value0 = 2
					if stage.debugMode == 0
						CallNativeFunction2(SetAchievement, 3, 100)
					end if
				end if
			end if
		end if
		break
	case 1
		music.volume--
		object.value2++
		if object.value2 == 2
			object.value2 = 0
			object.frame++
			if object.frame == 5
				object.frame = 1
				Rand(temp0, 48)
				temp0 <<= 16
				temp0 += object.xpos
				temp0 -= 0x180000
				Rand(temp1, 32)
				temp1 <<= 16
				temp1 += object.ypos
				temp1 -= 0x140000
				CreateTempObject(TypeName[Ring Sparkle], 0, temp0, temp1)
				object.value1--
				if object.value1 == 0
					if object.value7 != 0
						SetBit(object.value3, 0, 1)
						if stage.player2Enabled == 1
							SetBit(object.value3, 1, 1)
						end if
					else
						object[0].interaction = 0
						object[0].controlMode = -1
						object[0].up = 0
						object[0].down = 0
						object[0].left = 0
						object[0].right = 0
						object[0].jumpPress = 0
						object[0].jumpHold = 0
					end if
					object.state = 2
				end if
			end if
		end if
		break
	case 2
		temp0 = screen.xcenter
		temp0 <<= 16
		temp0 += object.xpos
		CheckGreater(object[0].xpos, temp0)
		temp1 = checkResult
		CheckEqual(object.value7, 0)
		checkResult |= temp1
		if checkResult == 1
			PlayMusic(1)
			object.state = 6
			object[30].type = TypeName[Act Finish]
			object[30].drawOrder = 6
			object[30].priority = 1
		end if
		break
	case 3
		stage.newXBoundary2 = object.xpos
		stage.newXBoundary2 >>= 16
		stage.newXBoundary2 += screen.xcenter
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			GetBit(temp1, object.value3, currentPlayer)
			if temp1 == 0
				if object[currentPlayer].xpos > object.xpos
					object.priority = 1
					SetBit(object.value3, currentPlayer, 1)
					if currentPlayer == 0
						if PlayerObject_value0 == 1
							PlayerObject_value0 = 2
						end if
						if vs.playerID == 0
							temp2 = 0
						else
							temp2 = 1
						end if
					else
						if vs.playerID == 0
							temp2 = 1
						else
							temp2 = 0
						end if
					end if
					if temp2 == 0
						vs.time1P = stage.milliSeconds
						vs.time1P = stage.seconds
						vs.time1P *= 100
						temp2 = stage.minutes
						temp2 *= 0x1770
						vs.time1P += temp2
						vs.time1P += stage.milliSeconds
					else
						vs.time2P = stage.milliSeconds
						vs.time2P = stage.seconds
						vs.time2P *= 100
						temp2 = stage.minutes
						temp2 *= 0x1770
						vs.time2P += temp2
						vs.time2P += stage.milliSeconds
					end if
					object.value5 = currentPlayer
					object.value1 = 16
					object.state = 4
					PlaySfx(SfxName[Sign Post], 0)
					if object.value4 == 0
						PlaySfx(SfxName[Sign Post 2P], 0)
						object[30].state = 3
						object[30].value5 = currentPlayer
						object[30].value5 ^= 1
						switch object[currentPlayer].propertyValue
						case 0
							EditFrame(5, -24, -16, 48, 32, 34, 1)
							break
						case 1
							EditFrame(5, -24, -16, 48, 32, 34, 34)
							break
						case 2
							EditFrame(5, -24, -16, 48, 32, 34, 67)
							break
						end switch
					else
						object[30].state = 0
						stage.timeEnabled = 0
					end if
					if object.value3 == 3
						object.value4 = 1
						object[30].state = 0
					end if
				end if
			end if
		next
		break
	case 4
		if object.value4 == 1
			music.volume--
		else
			foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
				GetBit(temp1, object.value3, currentPlayer)
				if temp1 == 0
					if object[currentPlayer].xpos > object.xpos
						object.value2 = 1
						object.frame = 4
						object.value1 = 1
					end if
				end if
			next
		end if
		object.value2++
		if object.value2 == 2
			object.value2 = 0
			object.frame++
			if object.frame == 5
				object.frame = 1
				Rand(temp0, 48)
				temp0 <<= 16
				temp0 += object.xpos
				temp0 -= 0x180000
				Rand(temp1, 32)
				temp1 <<= 16
				temp1 += object.ypos
				temp1 -= 0x140000
				CreateTempObject(TypeName[Ring Sparkle], 0, temp0, temp1)
				object.value1--
				if object.value1 == 0
					if object.value4 == 0
						object.value4 = 1
						object.state = 3
					else
						object.state = 6
						object[30].state = 4
						object[30].value0 = -768
					end if
				end if
			end if
		end if
		break
	case 6
		break
	end switch
	temp0 = 40
	temp0 += 212
	temp0 <<= 16
	temp0 += object.xpos
	currentPlayer = 0
	while currentPlayer < playerCount
		GetBit(temp1, object.value3, currentPlayer)
		if temp1 == 1
			object[currentPlayer].interaction = 0
			object[currentPlayer].controlMode = -1
			object[currentPlayer].up = 0
			object[currentPlayer].down = 0
			object[currentPlayer].left = 0
			object[currentPlayer].right = 1
			object[currentPlayer].jumpPress = 0
			object[currentPlayer].jumpHold = 0
		end if
		if object[currentPlayer].xpos > temp0
			object[currentPlayer].xpos = temp0
			object[currentPlayer].speed = 0
			object[currentPlayer].xvel = 0
		end if
		if object[currentPlayer].type == TypeName[Debug Mode]
			SetBit(object.value3, currentPlayer, 0)
		end if
		currentPlayer++
	loop
	if object.state > 0
		object[0].value7 = 80
	end if
end event


event ObjectDraw
	DrawSprite(0)
	if object.value1 > 8
		DrawSprite(object.frame)
	else
		temp0 = object.frame
		temp0 += 4
		DrawSprite(temp0)
	end if
end event


event ObjectStartup
	LoadSpriteSheet("Global/Items2.gif")
	
	SpriteFrame(-24, 16, 48, 16, 34, 132)
	SpriteFrame(-24, -16, 48, 32, 34, 100)
	SpriteFrame(-16, -16, 32, 32, 149, 99)
	SpriteFrame(-4, -16, 8, 32, 247, 2)
	SpriteFrame(-16, -16, 32, 32, 116, 99)
	SpriteFrame(-24, -16, 48, 32, 34, 1)
	SpriteFrame(-16, -16, 32, 32, 149, 99)
	SpriteFrame(-4, -16, 8, 32, 247, 2)
	SpriteFrame(-16, -16, 32, 32, 116, 99)
	
	foreach (TypeName[Sign Post2], arrayPos0, ALL_ENTITIES)
		CheckGreater(object[arrayPos0].propertyValue, 0)
		temp0 = checkResult
		CheckEqual(options.vsMode, 0)
		temp0 &= checkResult
		if temp0 == 1
			object[arrayPos0].type = TypeName[Blank Object]
		else
			object[arrayPos0].value6 = object[arrayPos0].value0
			object[arrayPos0].value6 <<= 4
			object[arrayPos0].value0 = 0
			object[arrayPos0].value7 = object[arrayPos0].value1
			object[arrayPos0].value1 = 0
			object[arrayPos0].frame = 1
			object[arrayPos0].value1 = 16
			if object[arrayPos0].propertyValue != 2
				object[arrayPos0].priority = 3
			end if
		end if
		
		if options.vsMode == true
			object[arrayPos0].state = 3
		end if
	next
	SetTableValue(TypeName[Sign Post2], DebugMode_value25, DebugMode_table12)
	SetTableValue(SignPost2_DebugDraw, DebugMode_value25, DebugMode_table13)
	SetTableValue(SignPost2_DebugSpawn, DebugMode_value25, DebugMode_table11)
	DebugMode_value25++
end event


// ========================
// Editor Events
// ========================

event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			break
		case 0 // type
			checkResult = object.propertyValue
			break
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			break
		case 0 // type
			object.propertyValue = editor.variableValue
			break
		end switch
	end if
end event


event RSDKDraw
	DrawSprite(0)
	DrawSprite(1)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Items2.gif")
	SpriteFrame(-24, 16, 48, 16, 34, 132)
	SpriteFrame(-24, -16, 48, 32, 34, 100)
	
	AddEditorVariable("type")
	SetActiveVariable("type")
	AddEnumVariable("Normal", 0)
	AddEnumVariable("VS Only (No Y Bounds)", 1)
	AddEnumVariable("VS Only (Use Y Bounds)", 2)
end event
