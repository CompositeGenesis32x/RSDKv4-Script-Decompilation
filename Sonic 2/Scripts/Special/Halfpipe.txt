// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Halfpipe Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias object.value1  : object.moveStep
private alias object.value20 : object.transformID
private alias object.value21 : object.nextTransformID
private alias object.value22 : object.zpos
private alias object.value23 : object.moveSpeed


public alias object.value2  : object.transformID2
public alias object.value3  : object.nextTransformID2
public alias object.value4  : object.pipeTranslateX
public alias object.value5  : object.pipeTranslateY
public alias object.value6  : object.pipeTranslateZ
public alias object.value7  : object.viewRotateX
public alias object.value8  : object.viewRotateY
public alias object.value9  : object.viewRotateZ
public alias object.value10 : object.viewRotateX2
public alias object.value11 : object.viewRotateY2
public alias object.value12 : object.viewRotateZ2

public alias object.value13 : object.moveZ
public alias object.value14 : object.translateX
public alias object.value15 : object.translateY
public alias object.value16 : object.translateZ
public alias object.value17 : object.rotateX
public alias object.value18 : object.rotateY
public alias object.value19 : object.rotateZ

//For Objects
public alias object.value1  : object.worldX
public alias object.value2  : object.worldY
public alias object.value3  : object.worldZ

public alias object.value4  : object.vertX
public alias object.value5  : object.vertY
public alias object.value6  : object.vertZ

public alias object.value8  : object.worldX2
public alias object.value9  : object.worldY2
public alias object.value11 : object.vert2X
public alias object.value12 : object.vert2Y
public alias object.value13 : object.vert2Z
public alias object.value14 : object.unknown // TODO
public alias object.value7  : object.shadowsEnabled

// Function declarations
reserve function Halfpipe_SetupVertices
reserve function Halfpipe_SetupFaces

// Static Values
public value Halfpipe_vertexInfoTable	= 0;
public value Halfpipe_vertexCount 		= 0;
public value Halfpipe_faceInfoTable 	= 0;
public value Halfpipe_vertexTableID 	= 0;
public value Halfpipe_prevVertexCount 	= 0;
public value Halfpipe_faceCount 		= 0;
public value Halfpipe_rotateOffsetX 	= 0;
public value Halfpipe_rotateOffsetY 	= 0;
public value Halfpipe_rotateOffsetZ 	= 0;
public value Halfpipe_tempTranslateX 	= 0;
public value Halfpipe_tempTranslateY 	= 0;
public value Halfpipe_tempTranslateZ 	= 0;
public value Halfpipe_worldRotateX 		= 0;
public value Halfpipe_worldRotateY 		= 0;
public value Halfpipe_worldRotateZ 		= 0;
public value Halfpipe_tranformPos 		= 0;
public value Halfpipe_checkpointTexCount = 0;

// Tables
public table Halfpipe_translateXTable
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0
end table

public table Halfpipe_translateYTable
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0
end table

public table Halfpipe_translateZTable
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0
end table

public table Halfpipe_rotateXTable
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0
end table

public table Halfpipe_rotateYTable
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0
end table

public table Halfpipe_rotateZTable
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	0, 0, 0, 0, 0, 0, 0, 0
end table

public table Halfpipe_checkpointFaceTable
	0, 0, 0, 0
end table

public table Halfpipe_vertexOffsetTable
	19, 19, 19, 19, 17, 17, 45, 17
end table

public table Halfpipe_matTransformTable
	0, 2, 4, 6, 8, 10, 12, 14, 16, -2, -4, -6, -8, -10, -12, -14, -16
end table

public table Halfpipe_vertexTablePtrs
	0, 0, 0, 0, 0, 0, 0, 0
end table

public table Halfpipe_vertexTable1
	38, -0x4000, 0x1100, 0, -0x4400, 0xD00, 0, -0x3C00, 0xD00, 0, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0, 0x4000, 0x1100, 0, 0x3C00, 0xD00, 0, 0x4400, 0xD00, 0, -0x4000, 0x1100, 0, -0x4400, 0xD00, 0, -0x3C00, 0xD00, 0, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0, 0x4000, 0x1100, 0, 0x3C00, 0xD00, 0, 0x4400, 0xD00, 0
end table

public table Halfpipe_faceTable1
	22, 0, 1, 3, 2, 3, 0, 1, 20, 19, 2, 0, 2, 21, 19, 2, 1, 20, 22, 3, 2, 2, 21, 22, 3, 2, 3, 22, 23, 4, 1, 4, 23, 24, 5, 0, 5, 24, 25, 6, 0, 6, 25, 26, 7, 0, 7, 26, 27, 8, 1, 8, 27, 28, 9, 0, 9, 28, 29, 10, 0, 10, 29, 30, 11, 1, 11, 30, 31, 12, 0, 12, 31, 32, 13, 0, 13, 32, 33, 14, 0, 14, 33, 34, 15, 1, 16, 17, 15, 18, 3, 16, 35, 36, 17, 2, 17, 36, 15, 34, 2, 16, 35, 37, 18, 2, 18, 37, 34, 15, 2
end table

public table Halfpipe_faceTable2
	20, 0, 1, 20, 19, 2, 0, 2, 21, 19, 2, 1, 20, 22, 3, 2, 2, 21, 22, 3, 2, 3, 22, 23, 4, 1, 4, 23, 24, 5, 0, 5, 24, 25, 6, 0, 6, 25, 26, 7, 0, 7, 26, 27, 8, 1, 8, 27, 28, 9, 0, 9, 28, 29, 10, 0, 10, 29, 30, 11, 1, 11, 30, 31, 12, 0, 12, 31, 32, 13, 0, 13, 32, 33, 14, 0, 14, 33, 34, 15, 1, 16, 35, 36, 17, 2, 17, 36, 15, 34, 2, 16, 35, 37, 18, 2, 18, 37, 34, 15, 2
end table

public table Halfpipe_vertexTable2
	34, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x2059, -0x36DE, 0, -0x1449, -0x3C5D, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x1449, -0x3C5D, 0, 0x2059, -0x36DE, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1ED7, -0x378F, 0, -0x15CB, -0x3BAF, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x15CB, -0x3BAF, 0, 0x1ED7, -0x378F, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0
end table

public table Halfpipe_faceTable3
	16, 0, 17, 18, 1, 1, 1, 18, 19, 2, 0, 2, 19, 20, 3, 0, 3, 20, 21, 4, 0, 4, 21, 22, 5, 1, 5, 22, 23, 6, 2, 6, 23, 24, 7, 1, 7, 24, 25, 8, 0, 8, 25, 26, 9, 0, 9, 26, 27, 10, 1, 10, 27, 28, 11, 2, 11, 28, 29, 12, 1, 12, 29, 30, 13, 0, 13, 30, 31, 14, 0, 14, 31, 32, 15, 0, 15, 32, 33, 16, 1
end table

public table Halfpipe_vertexTable3
	51, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1ED7, -0x378F, 0, -0x15CB, -0x3BAF, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x15CB, -0x3BAF, 0, 0x1ED7, -0x378F, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1E46, -0x37D1, 0, -0x165C, -0x3B6D, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x165C, -0x3B6D, 0, 0x1E46, -0x37D1, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0
	0x4000, -0x91C, 0, 0x4000, 0x900, 0, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1D55, -0x383F, 0, -0x174D, -0x3AFF, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x174D, -0x3AFF, 0, 0x1D55, -0x383F, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0
end table

public table Halfpipe_faceTable4
	32, 0, 17, 18, 1, 1, 1, 18, 19, 2, 0, 2, 19, 20, 3, 0, 3, 20, 21, 4, 0, 4, 21, 22, 5, 1, 5, 22, 23, 6, 2, 6, 23, 24, 7, 1, 7, 24, 25, 8, 0, 8, 25, 26, 9, 0, 9, 26, 27, 10, 1, 10, 27, 28, 11, 2, 11, 28, 29, 12, 1, 12, 29, 30, 13, 0, 13, 30, 31, 14, 0, 14, 31, 32, 15, 0, 15, 32, 33, 16, 1, 17, 34, 35, 18, 1, 18, 35, 36, 19, 1, 19, 36, 37, 20, 1, 20, 37, 38, 21, 1, 21, 38, 39, 22, 1, 22, 39, 40, 23, 2, 23, 40, 41, 24, 1, 24, 41, 42, 25, 1, 25, 42, 43, 26, 1, 26, 43, 44, 27, 1, 27, 44, 45, 28, 2, 28, 45, 46, 29, 1, 29, 46, 47, 30, 1, 30, 47, 48, 31, 1, 31, 48, 49, 32, 1, 32, 49, 50, 33, 1
end table

public table Halfpipe_vertexTable4
	79, -0x3800, 0xA00, 0, -0x3800, 0xA00, 0, -0x3800, 0xA00, 0, -0x3800, 0xA00, 0, -0x2E00, 0x2400, 0, -0x2E00, 0x2400, 0, -0x2E00, 0x2400, 0, -0x2E00, 0x2400, 0, -0x1A00, 0x3600, 0, -0x1A00, 0x3600, 0, -0x1A00, 0x3600, 0, -0x1A00, 0x3600, 0, 0, 0x4000, 0, 0, 0x4000, 0, 0, 0x4000, 0, 0, 0x4000, 0, 0x1A00, 0x3600, 0, 0x1A00, 0x3600, 0, 0x1A00, 0x3600, 0, 0x1A00, 0x3600, 0, 0x2E00, 0x2400, 0, 0x2E00, 0x2400, 0, 0x2E00, 0x2400, 0, 0x2E00, 0x2400, 0, 0x3800, 0xA00, 0, 0x3800, 0xA00, 0, 0x3800, 0xA00, 0, 0x3800, 0xA00, 0, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1D55, -0x383F, 0
	-0x174D, -0x3AFF, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x174D, -0x3AFF, 0, 0x1D55, -0x383F, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1C64, -0x38AD, 0, -0x183E, -0x3A91, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x183E, -0x3A91, 0, 0x1C64, -0x38AD, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1BD3, -0x38EF, 0, -0x18CF, -0x3A50, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x18CF, -0x3A50, 0, 0x1BD3, -0x38EF, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0
end table

public table Halfpipe_faceTable5
	39, 0, 1, 2, 3, 5, 4, 5, 6, 7, 5, 8, 9, 10, 11, 5, 12, 13, 14, 15, 5, 16, 17, 18, 19, 5, 20, 21, 22, 23, 5, 24, 25, 26, 27, 5, 28, 45, 46, 29, 1, 29, 46, 47, 30, 1, 30, 47, 48, 31, 1, 31, 48, 49, 32, 1, 32, 49, 50, 33, 1, 33, 50, 51, 34, 2, 34, 51, 52, 35, 1, 35, 52, 53, 36, 1, 36, 53, 54, 37, 1, 37, 54, 55, 38, 1, 38, 55, 56, 39, 2, 39, 56, 57, 40, 1, 40, 57, 58, 41, 1, 41, 58, 59, 42, 1, 42, 59, 60, 43, 1, 43, 60, 61, 44, 1, 45, 62, 63, 46, 1, 46, 63, 64, 47, 0, 47, 64, 65, 48, 0, 48, 65, 66, 49, 0, 49, 66, 67, 50, 1, 50, 67, 68, 51, 2, 51, 68, 69, 52, 1, 52, 69, 70, 53, 0, 53, 70, 71, 54, 0, 54, 71, 72, 55, 1, 55, 72, 73, 56, 2, 56, 73, 74, 57, 1, 57, 74, 75, 58, 0, 58, 75, 76, 59, 0, 59, 76, 77, 60, 0, 60, 77, 78, 61, 1
end table

public table Halfpipe_vertexTable5
	34, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1BD3, -0x38EF, 0, -0x18CF, -0x3A50, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x18CF, -0x3A50, 0, 0x1BD3, -0x38EF, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0, -0x4000, 0x900, 0, -0x4000, -0x91C, 0, -0x3A37, -0x1A96, 0, -0x305E, -0x29E9, 0, -0x2298, -0x35D7, 0, -0x1A51, -0x39A0, 0, -0x1A51, -0x39A0, 0, -0x1208, -0x3D68, 0, 0, -0x4000, 0, 0x1208, -0x3D68, 0, 0x1A51, -0x39A0, 0, 0x1A51, -0x39A0, 0, 0x2298, -0x35D7, 0, 0x305E, -0x29E9, 0, 0x3A37, -0x1A96, 0, 0x4000, -0x91C, 0, 0x4000, 0x900, 0
end table

public table Halfpipe_faceTable6
	16, 0, 17, 18, 1, 1, 1, 18, 19, 2, 0, 2, 19, 20, 3, 0, 3, 20, 21, 4, 0, 4, 21, 22, 5, 1, 5, 22, 23, 6, 2, 6, 23, 24, 7, 1, 7, 24, 25, 8, 0, 8, 25, 26, 9, 0, 9, 26, 27, 10, 1, 10, 27, 28, 11, 2, 11, 28, 29, 12, 1, 12, 29, 30, 13, 0, 13, 30, 31, 14, 0, 14, 31, 32, 15, 0, 15, 32, 33, 16, 1
end table

function Halfpipe_SetupVertices
	temp1 = object[0].xpos
	temp1 >>= 16
	temp1 += 376
	temp2 = object[0].ypos
	temp2 >>= 16

	Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
	if temp0 == 1
		temp2 += 128
		temp2 &= 0xFF80
		object[0].iypos = temp2
	end if
	temp1 += 16

	temp3 = Halfpipe_worldRotateY
	temp3 += 64
	temp3 &= 511
	temp3 >>= 7
	switch temp3
	case 0
		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetX, temp0, Halfpipe_matTransformTable)
		temp1 += 16

		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetY, temp0, Halfpipe_matTransformTable)
		temp1 += 16

		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetZ, temp0, Halfpipe_matTransformTable)
		break
	case 1
		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetZ, temp0, Halfpipe_matTransformTable)
		temp1 += 16

		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetY, temp0, Halfpipe_matTransformTable)
		temp1 += 16

		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetX, temp0, Halfpipe_matTransformTable)
		break
	case 2
		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetX, temp0, Halfpipe_matTransformTable)
		FlipSign(Halfpipe_rotateOffsetX)
		temp1 += 16

		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetY, temp0, Halfpipe_matTransformTable)
		temp1 += 16

		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetZ, temp0, Halfpipe_matTransformTable)
		FlipSign(Halfpipe_rotateOffsetZ)
		break
	case 3
		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetZ, temp0, Halfpipe_matTransformTable)
		FlipSign(Halfpipe_rotateOffsetZ)
		temp1 += 16

		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetY, temp0, Halfpipe_matTransformTable)
		temp1 += 16

		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEA)
		GetTableValue(Halfpipe_rotateOffsetX, temp0, Halfpipe_matTransformTable)
		FlipSign(Halfpipe_rotateOffsetX)
		break
	end switch

	temp0 = stage.curYBoundary2
	temp0 <<= 16

	object[0].ypos += 0x80000
	if object[0].ypos >= temp0
		object[0].ypos -= temp0
	end if

	object[0].zpos += 0x80000
	if object[0].zpos >= temp0
		object[0].zpos -= temp0
	end if

	MatrixRotateXYZ(MAT_WORLD, Halfpipe_worldRotateX, Halfpipe_worldRotateY, Halfpipe_worldRotateZ)
	MatrixTranslateXYZ(MAT_TEMP, Halfpipe_tempTranslateX, Halfpipe_tempTranslateY, Halfpipe_tempTranslateZ)
	MatrixMultiply(MAT_WORLD, MAT_TEMP)

	temp0 = true
	while temp0 == true
		if object[arrayPos5].ypos < object[0].ypos
			object[arrayPos5].priority = PRIORITY_ACTIVE
			if object[arrayPos5].shadowsEnabled == true
				vertexBuffer[4094].x = object[arrayPos5].worldX
				vertexBuffer[4094].y = object[arrayPos5].worldY
				vertexBuffer[4094].z = 0
				vertexBuffer[4095].x = object[arrayPos5].worldX2
				vertexBuffer[4095].y = object[arrayPos5].worldY2
				vertexBuffer[4095].z = 0
				TransformVertices(MAT_WORLD, 0xFFE, 0x1000)

				object[arrayPos5].worldZ = object[0].zpos
				object[arrayPos5].vertX = vertexBuffer[4094].x
				object[arrayPos5].vertY = vertexBuffer[4094].y
				object[arrayPos5].vertZ = vertexBuffer[4094].z
				object[arrayPos5].vert2X = vertexBuffer[4095].x
				object[arrayPos5].vert2Y = vertexBuffer[4095].y
				object[arrayPos5].vert2Z = vertexBuffer[4095].z
			else
				vertexBuffer[4095].x = object[arrayPos5].worldX
				vertexBuffer[4095].y = object[arrayPos5].worldY
				vertexBuffer[4095].z = 0
				TransformVertices(MAT_WORLD, 0xFFF, 0x1000)

				object[arrayPos5].worldZ = object[0].zpos
				object[arrayPos5].vertX = vertexBuffer[4095].x
				object[arrayPos5].vertY = vertexBuffer[4095].y
				object[arrayPos5].vertZ = vertexBuffer[4095].z
			end if
			arrayPos5++
		else
			temp0 = false
		end if
	loop

	temp2 = Halfpipe_vertexTableID
	temp2 &= 7
	GetTableValue(Halfpipe_vertexInfoTable, temp2, Halfpipe_vertexTablePtrs)
	Halfpipe_vertexTableID++

	temp0 = 0
	arrayPos0 = Halfpipe_vertexCount
	GetTableValue(temp1, temp0, Halfpipe_vertexInfoTable)
	temp0++
	while temp1 > 0
		GetTableValue(vertexBuffer[arrayPos0].x, temp0, Halfpipe_vertexInfoTable)
		temp0++
		GetTableValue(vertexBuffer[arrayPos0].y, temp0, Halfpipe_vertexInfoTable)
		temp0++
		GetTableValue(vertexBuffer[arrayPos0].z, temp0, Halfpipe_vertexInfoTable)
		temp0++
		arrayPos0++
		temp1--
	loop

	SetTableValue(Halfpipe_tempTranslateX, Halfpipe_tranformPos, Halfpipe_translateXTable)
	SetTableValue(Halfpipe_tempTranslateY, Halfpipe_tranformPos, Halfpipe_translateYTable)
	SetTableValue(Halfpipe_tempTranslateZ, Halfpipe_tranformPos, Halfpipe_translateZTable)
	SetTableValue(Halfpipe_worldRotateX, Halfpipe_tranformPos, Halfpipe_rotateXTable)
	SetTableValue(Halfpipe_worldRotateY, Halfpipe_tranformPos, Halfpipe_rotateYTable)
	SetTableValue(Halfpipe_worldRotateZ, Halfpipe_tranformPos, Halfpipe_rotateZTable)

	switch temp2
	case 0
	case 1
	case 2
	case 3
	case 4
	case 7
		GetTableValue(temp0, temp2, Halfpipe_vertexOffsetTable)
		temp0 += Halfpipe_vertexCount
		TransformVertices(MAT_WORLD, Halfpipe_vertexCount, temp0)
		vertexBuffer[4095].x = 0
		vertexBuffer[4095].y = 0
		vertexBuffer[4095].z = 0x2000
		TransformVertices(MAT_WORLD, 0xFFF, 0x1000)

		Halfpipe_tempTranslateX = vertexBuffer[4095].x
		Halfpipe_tempTranslateY = vertexBuffer[4095].y
		Halfpipe_tempTranslateZ = vertexBuffer[4095].z
		Halfpipe_worldRotateX += Halfpipe_rotateOffsetX
		Halfpipe_worldRotateY += Halfpipe_rotateOffsetY
		Halfpipe_worldRotateZ += Halfpipe_rotateOffsetZ
		MatrixRotateXYZ(MAT_WORLD, Halfpipe_worldRotateX, Halfpipe_worldRotateY, Halfpipe_worldRotateZ)
		MatrixTranslateXYZ(MAT_TEMP, Halfpipe_tempTranslateX, Halfpipe_tempTranslateY, Halfpipe_tempTranslateZ)
		MatrixMultiply(MAT_WORLD, MAT_TEMP)
		TransformVertices(MAT_WORLD, temp0, arrayPos0)
		break
	case 5
		GetTableValue(temp0, temp2, Halfpipe_vertexOffsetTable)
		temp0 += Halfpipe_vertexCount
		TransformVertices(MAT_WORLD, Halfpipe_vertexCount, temp0)
		vertexBuffer[4094].x = 0
		vertexBuffer[4094].y = 0
		vertexBuffer[4094].z = 0xC00
		vertexBuffer[4095].x = 0
		vertexBuffer[4095].y = 0
		vertexBuffer[4095].z = 0x2000
		TransformVertices(MAT_WORLD, 0xFFE, 0x1000)

		Halfpipe_tempTranslateX = vertexBuffer[4094].x
		Halfpipe_tempTranslateY = vertexBuffer[4094].y
		Halfpipe_tempTranslateZ = vertexBuffer[4094].z
		temp3 = Halfpipe_rotateOffsetX
		temp3 *= 12
		temp3 >>= 5
		Halfpipe_worldRotateX += temp3
		temp3 = Halfpipe_rotateOffsetY
		temp3 *= 12
		temp3 >>= 5
		Halfpipe_worldRotateY += temp3
		temp3 = Halfpipe_rotateOffsetZ
		temp3 *= 12
		temp3 >>= 5
		Halfpipe_worldRotateZ += temp3
		MatrixRotateXYZ(MAT_WORLD, Halfpipe_worldRotateX, Halfpipe_worldRotateY, Halfpipe_worldRotateZ)
		MatrixTranslateXYZ(MAT_TEMP, Halfpipe_tempTranslateX, Halfpipe_tempTranslateY, Halfpipe_tempTranslateZ)
		MatrixMultiply(MAT_WORLD, MAT_TEMP)
		temp1 = temp0
		temp1 += 17
		TransformVertices(MAT_WORLD, temp0, temp1)

		Halfpipe_tempTranslateX = vertexBuffer[4095].x
		Halfpipe_tempTranslateY = vertexBuffer[4095].y
		Halfpipe_tempTranslateZ = vertexBuffer[4095].z
		GetTableValue(Halfpipe_worldRotateX, Halfpipe_tranformPos, Halfpipe_rotateXTable)
		GetTableValue(Halfpipe_worldRotateY, Halfpipe_tranformPos, Halfpipe_rotateYTable)
		GetTableValue(Halfpipe_worldRotateZ, Halfpipe_tranformPos, Halfpipe_rotateZTable)
		Halfpipe_worldRotateX += Halfpipe_rotateOffsetX
		Halfpipe_worldRotateY += Halfpipe_rotateOffsetY
		Halfpipe_worldRotateZ += Halfpipe_rotateOffsetZ
		MatrixRotateXYZ(MAT_WORLD, Halfpipe_worldRotateX, Halfpipe_worldRotateY, Halfpipe_worldRotateZ)
		MatrixTranslateXYZ(MAT_TEMP, Halfpipe_tempTranslateX, Halfpipe_tempTranslateY, Halfpipe_tempTranslateZ)
		MatrixMultiply(MAT_WORLD, MAT_TEMP)
		TransformVertices(MAT_WORLD, temp1, arrayPos0)
		break
	case 6
		GetTableValue(temp0, temp2, Halfpipe_vertexOffsetTable)
		temp0 += Halfpipe_vertexCount
		TransformVertices(MAT_WORLD, Halfpipe_vertexCount, temp0)

		vertexBuffer[4094].x = 0
		vertexBuffer[4094].y = 0
		vertexBuffer[4094].z = 0x1400
		vertexBuffer[4095].x = 0
		vertexBuffer[4095].y = 0
		vertexBuffer[4095].z = 0x2000
		TransformVertices(MAT_WORLD, 0xFFE, 0x1000)

		Halfpipe_tempTranslateX = vertexBuffer[4094].x
		Halfpipe_tempTranslateY = vertexBuffer[4094].y
		Halfpipe_tempTranslateZ = vertexBuffer[4094].z
		temp3 = Halfpipe_rotateOffsetX
		temp3 *= 20
		temp3 >>= 5
		Halfpipe_worldRotateX += temp3
		temp3 = Halfpipe_rotateOffsetY
		temp3 *= 20
		temp3 >>= 5
		Halfpipe_worldRotateY += temp3
		temp3 = Halfpipe_rotateOffsetZ
		temp3 *= 20
		temp3 >>= 5
		Halfpipe_worldRotateZ += temp3
		MatrixRotateXYZ(MAT_WORLD, Halfpipe_worldRotateX, Halfpipe_worldRotateY, Halfpipe_worldRotateZ)
		MatrixTranslateXYZ(MAT_TEMP, Halfpipe_tempTranslateX, Halfpipe_tempTranslateY, Halfpipe_tempTranslateZ)
		MatrixMultiply(MAT_WORLD, MAT_TEMP)
		temp1 = temp0
		temp1 += 17
		TransformVertices(MAT_WORLD, temp0, temp1)

		Halfpipe_tempTranslateX = vertexBuffer[4095].x
		Halfpipe_tempTranslateY = vertexBuffer[4095].y
		Halfpipe_tempTranslateZ = vertexBuffer[4095].z
		GetTableValue(Halfpipe_worldRotateX, Halfpipe_tranformPos, Halfpipe_rotateXTable)
		GetTableValue(Halfpipe_worldRotateY, Halfpipe_tranformPos, Halfpipe_rotateYTable)
		GetTableValue(Halfpipe_worldRotateZ, Halfpipe_tranformPos, Halfpipe_rotateZTable)
		Halfpipe_worldRotateX += Halfpipe_rotateOffsetX
		Halfpipe_worldRotateY += Halfpipe_rotateOffsetY
		Halfpipe_worldRotateZ += Halfpipe_rotateOffsetZ
		MatrixRotateXYZ(MAT_WORLD, Halfpipe_worldRotateX, Halfpipe_worldRotateY, Halfpipe_worldRotateZ)
		MatrixTranslateXYZ(MAT_TEMP, Halfpipe_tempTranslateX, Halfpipe_tempTranslateY, Halfpipe_tempTranslateZ)
		MatrixMultiply(MAT_WORLD, MAT_TEMP)
		TransformVertices(MAT_WORLD, temp1, arrayPos0)
		break
	end switch

	Halfpipe_tranformPos++
	Halfpipe_tranformPos %= 40
	Halfpipe_vertexCount = arrayPos0
	if Halfpipe_vertexCount >= Halfpipe_prevVertexCount
		Halfpipe_vertexCount = 0
	end if
end function


function Halfpipe_SetupFaces
	temp0 = 0
	arrayPos0 = scene3D.faceCount
	GetTableValue(temp1, temp0, Halfpipe_faceInfoTable)
	temp0++
	while temp1 > 0
		GetTableValue(faceBuffer[arrayPos0].a, temp0, Halfpipe_faceInfoTable)
		faceBuffer[arrayPos0].a += Halfpipe_vertexCount
		temp0++
		GetTableValue(faceBuffer[arrayPos0].b, temp0, Halfpipe_faceInfoTable)
		faceBuffer[arrayPos0].b += Halfpipe_vertexCount
		temp0++
		GetTableValue(faceBuffer[arrayPos0].c, temp0, Halfpipe_faceInfoTable)
		faceBuffer[arrayPos0].c += Halfpipe_vertexCount
		temp0++
		GetTableValue(faceBuffer[arrayPos0].d, temp0, Halfpipe_faceInfoTable)
		faceBuffer[arrayPos0].d += Halfpipe_vertexCount
		temp0++
		GetTableValue(temp2, temp0, Halfpipe_faceInfoTable)
		temp0++
		switch temp2
		case 0
			faceBuffer[arrayPos0].flag = FACE_FADED
			faceBuffer[arrayPos0].color = SpecialSetup_StageColour1
			break
		case 1
			faceBuffer[arrayPos0].flag = FACE_FADED
			faceBuffer[arrayPos0].color = SpecialSetup_StageColour2
			break
		case 2
			faceBuffer[arrayPos0].flag = FACE_FADED
			faceBuffer[arrayPos0].color = 0xFFE0E000
			break
		case 3
			faceBuffer[arrayPos0].flag = FACE_FADED
			faceBuffer[arrayPos0].color = 0xFFE0A020
			break
		case 5
			faceBuffer[arrayPos0].flag = FACE_TEXTURED_C
			arrayPos1 = faceBuffer[arrayPos0].a
			vertexBuffer[arrayPos1].u = 17
			vertexBuffer[arrayPos1].v = 17
			arrayPos2 = Halfpipe_checkpointTexCount
			arrayPos2 %= 7
			if arrayPos2 == 0
				arrayPos2 = Halfpipe_checkpointTexCount
				arrayPos2 /= 7
				SetTableValue(arrayPos1, arrayPos2, Halfpipe_checkpointFaceTable)
			end if
			Halfpipe_checkpointTexCount++
			Halfpipe_checkpointTexCount++
			arrayPos1 = faceBuffer[arrayPos0].b
			vertexBuffer[arrayPos1].u = 0x800
			vertexBuffer[arrayPos1].v = 0x800
			arrayPos1 = faceBuffer[arrayPos0].c
			vertexBuffer[arrayPos1].u = 16
			vertexBuffer[arrayPos1].v = 16
			break
		end switch
		arrayPos0++
		scene3D.faceCount++
		temp1--
	loop
end function


event ObjectMain
	scene3D.vertexCount = Halfpipe_prevVertexCount
	scene3D.faceCount = Halfpipe_faceCount
	//if inputDown.select == true
	if true == true
		object.moveStep += object.moveSpeed
		temp0 = object.moveSpeed
		temp0 <<= 13
		object.moveZ += temp0
		if object.moveStep > 63
			object.moveStep -= 64
			CallFunction(Halfpipe_SetupVertices)
			object.transformID2++
			object.transformID2 %= 40
			object.nextTransformID2++
			object.nextTransformID2 %= 40
			object.transformID++
			object.transformID %= 40
			object.nextTransformID++
			object.nextTransformID %= 40
		end if
	end if

	// ========================
	// HALFPIPE TRANSFORMATIONS
	// ========================

	//Translation

	GetTableValue(object.pipeTranslateX, object.transformID2, Halfpipe_translateXTable)
	GetTableValue(temp0, object.nextTransformID2, Halfpipe_translateXTable)
	temp0 -= object.pipeTranslateX
	temp0 *= object.moveStep
	temp0 >>= 6
	object.pipeTranslateX += temp0
	FlipSign(object.pipeTranslateX)

	GetTableValue(object.pipeTranslateY, object.transformID2, Halfpipe_translateYTable)
	GetTableValue(temp0, object.nextTransformID2, Halfpipe_translateYTable)
	temp0 -= object.pipeTranslateY
	temp0 *= object.moveStep
	temp0 >>= 6
	object.pipeTranslateY += temp0
	FlipSign(object.pipeTranslateY)

	GetTableValue(object.pipeTranslateZ, object.transformID2, Halfpipe_translateZTable)
	GetTableValue(temp0, object.nextTransformID2, Halfpipe_translateZTable)
	temp0 -= object.pipeTranslateZ
	temp0 *= object.moveStep
	temp0 >>= 6
	object.pipeTranslateZ += temp0
	FlipSign(object.pipeTranslateZ)

	// Rotation

	GetTableValue(temp1, object.transformID2, Halfpipe_rotateXTable)
	GetTableValue(temp0, object.nextTransformID2, Halfpipe_rotateXTable)
	temp0 -= temp1
	temp0 *= object.moveStep
	temp0 >>= 6
	temp1 += temp0
	temp1 <<= 1
	if object.viewRotateX2 != temp1
		temp0 = temp1
		temp0 -= object.viewRotateX2
		temp0 >>= 1
		if temp0 == 0
			if object.viewRotateX2 < temp1
				object.viewRotateX2++
			else
				object.viewRotateX2--
			end if
		else
			object.viewRotateX2 += temp0
		end if
	end if
	
	GetTableValue(temp1, object.transformID2, Halfpipe_rotateYTable)
	GetTableValue(temp0, object.nextTransformID2, Halfpipe_rotateYTable)
	temp0 -= temp1
	temp0 *= object.moveStep
	temp0 >>= 6
	temp1 += temp0
	temp1 <<= 1
	if object.viewRotateY2 != temp1
		temp0 = temp1
		temp0 -= object.viewRotateY2
		temp0 >>= 2
		if temp0 == 0
			if object.viewRotateY2 < temp1
				object.viewRotateY2++
			else
				object.viewRotateY2--
			end if
		else
			object.viewRotateY2 += temp0
		end if
	end if

	GetTableValue(temp1, object.transformID2, Halfpipe_rotateZTable)
	GetTableValue(temp0, object.nextTransformID2, Halfpipe_rotateZTable)
	temp0 -= temp1
	temp0 *= object.moveStep
	temp0 >>= 6
	temp1 += temp0
	temp1 <<= 1
	if object.viewRotateZ2 != temp1
		temp0 = temp1
		temp0 -= object.viewRotateZ2
		temp0 >>= 1
		if temp0 == 0
			if object.viewRotateZ2 < temp1
				object.viewRotateZ2++
			else
				object.viewRotateZ2--
			end if
		else
			object.viewRotateZ2 += temp0
		end if
	end if

	object.viewRotateX = object.viewRotateX2
	object.viewRotateY = object.viewRotateY2
	object.viewRotateZ = object.viewRotateZ2
	object.viewRotateX >>= 1
	object.viewRotateY >>= 1
	object.viewRotateZ >>= 1

	// ========================
	// WORLD TRANSFORMATIONS
	// ========================

	//Translation

	GetTableValue(object.translateX, object.transformID, Halfpipe_translateXTable)
	GetTableValue(temp0, object.nextTransformID, Halfpipe_translateXTable)
	temp0 -= object.translateX
	temp0 *= object.moveStep
	temp0 >>= 6
	object.translateX += temp0

	GetTableValue(object.translateY, object.transformID, Halfpipe_translateYTable)
	GetTableValue(temp0, object.nextTransformID, Halfpipe_translateYTable)
	temp0 -= object.translateY
	temp0 *= object.moveStep
	temp0 >>= 6
	object.translateY += temp0

	GetTableValue(object.translateZ, object.transformID, Halfpipe_translateZTable)
	GetTableValue(temp0, object.nextTransformID, Halfpipe_translateZTable)
	temp0 -= object.translateZ
	temp0 *= object.moveStep
	temp0 >>= 6
	object.translateZ += temp0

	// Rotation

	GetTableValue(object.rotateX, object.transformID, Halfpipe_rotateXTable)
	GetTableValue(temp0, object.nextTransformID, Halfpipe_rotateXTable)
	temp0 -= object.rotateX
	temp0 *= object.moveStep
	temp0 >>= 6
	object.rotateX += temp0

	GetTableValue(object.rotateY, object.transformID, Halfpipe_rotateYTable)
	GetTableValue(temp0, object.nextTransformID, Halfpipe_rotateYTable)
	temp0 -= object.rotateY
	temp0 *= object.moveStep
	temp0 >>= 6
	object.rotateY += temp0

	GetTableValue(object.rotateZ, object.transformID, Halfpipe_rotateZTable)
	GetTableValue(temp0, object.nextTransformID, Halfpipe_rotateZTable)
	temp0 -= object.rotateZ
	temp0 *= object.moveStep
	temp0 >>= 6
	object.rotateZ += temp0
end event


event ObjectDraw
	MatrixTranslateXYZ(MAT_WORLD, object.pipeTranslateX, object.pipeTranslateY, object.pipeTranslateZ)
	MatrixRotateXYZ(MAT_VIEW, object.viewRotateX, object.viewRotateY, object.viewRotateZ)
	MatrixInverse(MAT_VIEW)
	MatrixRotateXYZ(MAT_TEMP, -8, 0, 0)
	MatrixMultiply(MAT_VIEW, MAT_TEMP)
	temp0 = object[2].xpos
	temp0 *= -64
	temp0 >>= 9
	temp1 = object[2].ypos
	temp1 *= -96
	temp1 >>= 9
	temp1 -= 512
	MatrixTranslateXYZ(MAT_TEMP, temp0, temp1, 0)
	MatrixMultiply(MAT_VIEW, MAT_TEMP)
	Draw3DScene()
end event


event ObjectStartup
	LoadSpriteSheet("Special/Objects.gif")

	object[0].type 				= TypeName[Halfpipe]
	object[0].priority 			= PRIORITY_ACTIVE
	object[0].xpos 				= 0x1C00000
	object[0].ypos 				= 0
	object[0].moveZ 			= 0
	object[0].zpos 				= 0
	object[0].moveStep 			= 0
	object[0].transformID2 		= 0
	object[0].nextTransformID2 	= 1
	object[0].transformID 		= 2
	object[0].nextTransformID 	= 3
	object[0].moveSpeed 		= 17

	Halfpipe_vertexCount 		= 0
	Halfpipe_vertexTableID 		= 0
	Halfpipe_tranformPos 		= 0
	Halfpipe_prevVertexCount 	= 0x1000
	Halfpipe_tempTranslateX 	= 0
	Halfpipe_tempTranslateY 	= 0
	Halfpipe_tempTranslateZ 	= 0
	// Not in the original, probably should be though 
	// This fixes the special stage warping bug
	Halfpipe_worldRotateX 		= 0
	Halfpipe_worldRotateY 		= 0
	Halfpipe_worldRotateZ 		= 0

	arrayPos5 = 32
	SetTableValue(Halfpipe_vertexTable1, 0, Halfpipe_vertexTablePtrs)
	SetTableValue(Halfpipe_vertexTable1, 1, Halfpipe_vertexTablePtrs)
	SetTableValue(Halfpipe_vertexTable1, 2, Halfpipe_vertexTablePtrs)
	SetTableValue(Halfpipe_vertexTable1, 3, Halfpipe_vertexTablePtrs)
	SetTableValue(Halfpipe_vertexTable2, 4, Halfpipe_vertexTablePtrs)
	SetTableValue(Halfpipe_vertexTable3, 5, Halfpipe_vertexTablePtrs)
	SetTableValue(Halfpipe_vertexTable4, 6, Halfpipe_vertexTablePtrs)
	SetTableValue(Halfpipe_vertexTable5, 7, Halfpipe_vertexTablePtrs)
	Halfpipe_checkpointTexCount = 0
	scene3D.faceCount = 0

	temp7 = 0
	while temp7 < 4
		Halfpipe_faceInfoTable = Halfpipe_faceTable1
		CallFunction(Halfpipe_SetupFaces)
		CallFunction(Halfpipe_SetupVertices)

		Halfpipe_faceInfoTable = Halfpipe_faceTable2
		CallFunction(Halfpipe_SetupFaces)
		CallFunction(Halfpipe_SetupVertices)

		Halfpipe_faceInfoTable = Halfpipe_faceTable2
		CallFunction(Halfpipe_SetupFaces)
		CallFunction(Halfpipe_SetupVertices)

		Halfpipe_faceInfoTable = Halfpipe_faceTable2
		CallFunction(Halfpipe_SetupFaces)
		CallFunction(Halfpipe_SetupVertices)

		Halfpipe_faceInfoTable = Halfpipe_faceTable3
		CallFunction(Halfpipe_SetupFaces)
		CallFunction(Halfpipe_SetupVertices)

		Halfpipe_faceInfoTable = Halfpipe_faceTable4
		CallFunction(Halfpipe_SetupFaces)
		CallFunction(Halfpipe_SetupVertices)

		Halfpipe_faceInfoTable = Halfpipe_faceTable5
		CallFunction(Halfpipe_SetupFaces)
		CallFunction(Halfpipe_SetupVertices)

		Halfpipe_faceInfoTable = Halfpipe_faceTable6
		CallFunction(Halfpipe_SetupFaces)
		CallFunction(Halfpipe_SetupVertices)

		temp7++
	loop

	scene3D.vertexCount 		= Halfpipe_vertexCount
	Halfpipe_prevVertexCount 	= Halfpipe_vertexCount
	Halfpipe_faceCount 			= scene3D.faceCount
	Halfpipe_vertexCount 		= 0
	scene3D.projectionX 		= 216
	scene3D.projectionY 		= 216
	scene3D.fogStrength 		= 0x50
	scene3D.fogColor 			= 0x000000
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
