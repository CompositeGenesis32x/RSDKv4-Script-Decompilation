// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: ARZ Setup Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// ========================
// Aliases
// ========================
private alias object.value6  : object.clrDivisor_R
private alias object.value7  : object.clrDivisor_G
private alias object.value8  : object.clrDivisor_B
private alias object.value9  : object.waterClrDivisor_R
private alias object.value10 : object.waterClrDivisor_G
private alias object.value11 : object.waterClrDivisor_B

private alias object.value1  : object.paletteTimer

// Tracks
private alias 0 : TRACK_STAGE
private alias 1 : TRACK_ACTFINISH
private alias 2 : TRACK_INVINCIBLE
private alias 3 : TRACK_CONTINUE
private alias 4 : TRACK_BOSS
private alias 5 : TRACK_GAMEOVER
private alias 6 : TRACK_DROWNING
private alias 7 : TRACK_SUPER

// Reserved object slots
private alias 10 : SLOT_ZONESETUP
private alias 25 : SLOT_MUSICEVENT_CHANGE
private alias 26 : SLOT_MUSICEVENT_BOSS

// Music Events
private alias  0 : MUSICEVENT_FADETOBOSS
private alias  1 : MUSICEVENT_FADETOSTAGE
private alias  2 : MUSICEVENT_TRANSITION

private alias 0 : MUSICEVENT_FLAG_NOCHANGE
private alias 1 : MUSICEVENT_FLAG_SPEEDUP
private alias 2 : MUSICEVENT_FLAG_SLOWDOWN

// Music Loops
private alias 1     : MUSIC_LOOP_ARZ
private alias 1     : MUSIC_LOOP_ARZ_F

private alias 38679 : MUSIC_LOOP_INV
private alias 30897 : MUSIC_LOOP_INV_F


// ========================
// Function Declarations
// ========================
reserve function ARZSetup_getClrDivisor
reserve function ARZSetup_InitSuperSonicPal
reserve function ARZSetup_InitSuperTailsPal
reserve function ARZSetup_InitSuperKnuxPal
reserve function ARZSetup_SpeedUpMusic
reserve function ARZSetup_SlowDownMusic

// ========================
// Static Values
// ========================
public value ARZSetup_value33 = 0 

// Uses "Water_" since all water objects use it from the setup so its easier to make new objs this way
private alias ARZSetup_value33 : Water_flashTimer

// ========================
// Tables
// ========================
private table ARZSetup_replay_attract_S
	0x6C0000, 0x37D0000
	0b00000000, 68
	0b00001000, 68
	0b00111000, 1
	0b00101000, 4
	0b00001000, 6
	0b00000000, 26
	0b00001000, 37
	0b00000000, 2
	0b00001000, 13
	0b00000000, 28
	0b00110000, 1
	0b00100000, 10
	0b00100100, 3
	0b00100000, 15
	0b00101000, 5
	0b00001000, 34
	0b00111000, 1
	0b00101000, 5
	0b00001000, 170
	0b00000000, 2
	0b00000010, 8
	0b00000110, 1
	0b00000100, 15
	0b00000000, 18
	0b00001000, 81
	0b00000000, 53
	0b00110000, 1
	0b00100000, 6
	0b00100100, 23
	0b00000000, 57
	0b00001000, 52
	0b00111000, 1
	0b00101000, 2
	0b00001000, 43
	0b00000000, 76
	0b00110000, 1
	0b00100000, 17
	0b00101000, 39
	0b00001000, 32
	0b00001010, 2
	0b00000010, 15
	0b00000000, 35
	0b00110000, 1
	0b00100000, 45
	0b00000000, 33
	0b00110000, 1
	0b00100000, 52
	0b00100100, 3
	0b00000100, 25
	0b00000000, 5
	0b00110000, 1
	0b00100000, 1
	0b00101000, 96
	0b00100000, 1
	0b00100100, 2
	0b00000100, 13
	0b00000000, 27
	0b00001000, 7
	0b00111000, 1
	0b00101000, 22
	0b00001000, 11
	0b00000000, 1
	0b00000100, 10
	0b00000000, 10
	0b00001000, 85
	0b00000000, 8
	0b00001000, 11
	0b00111000, 1
	0b00101000, 4
	0b00001000, 23
	0b00000000, 66
	0b00001000, 5
	0b00111000, 1
	0b00101000, 19
	0b00001000, 84
	0b00111000, 1
end table


private table ARZSetup_replay_attract_T
	0x6C0000, 0x3810000
	0b00000000, 18
	0b00001000, 63
	0b00111000, 1
	0b00101000, 5
	0b00001000, 85
	0b00111000, 1
	0b00101000, 1
	0b00100000, 16
	0b00101000, 7
	0b00001000, 175
	0b00111000, 1
	0b00101000, 48
	0b00001000, 15
	0b00111000, 1
	0b00101000, 45
	0b00001000, 97
	0b00001010, 3
	0b00000010, 39
	0b00000000, 4
	0b00001000, 108
	0b00111000, 1
	0b00101000, 46
	0b00001000, 199
	0b00111000, 1
	0b00101000, 59
	0b00001000, 3
	0b00001010, 4
	0b00000010, 4
	0b00001010, 11
	0b00001000, 2
	0b00000000, 1
	0b00000010, 28
	0b00001000, 214
	0b00001010, 2
	0b00000010, 77
	0b00000000, 1
	0b00000100, 20
	0b00000000, 65
	0b00001000, 22
	0b00111000, 1
	0b00101000, 2
	0b00001000, 161
	0b00111000, 1
	0b00101000, 12
	0b00001000, 43
	0b00111000, 1
	0b00101000, 8
	0b00001000, 8
	0b00111000, 1
	0b00101000, 7
	0b00001000, 4
	0b00111000, 1
	0b00101000, 4
	0b00001000, 4
	0b00111000, 1
	0b00101000, 6
	0b00001000, 3
	0b00111000, 1
	0b00101000, 6
	0b00001000, 3
	0b00111000, 1
	0b00101000, 6
	0b00001000, 3
	0b00111000, 1
	0b00101000, 6
	0b00001000, 3
	0b00111000, 1
	0b00101000, 5
end table


private table ARZSetup_replay_attract_K
	0x6C0000, 0x37D0000
	0b00000000, 50
	0b00001000, 66
	0b00111000, 1
	0b00101000, 5
	0b00001000, 86
	0b00111000, 1
	0b00101000, 6
	0b00001000, 216
	0b00111000, 1
	0b00101000, 14
	0b00001000, 23
	0b00111000, 1
	0b00101000, 18
	0b00001000, 116
	0b00001010, 2
	0b00000010, 5
	0b00000000, 3
	0b00001000, 144
	0b00111000, 1
	0b00101000, 23
	0b00001000, 5
	0b00111000, 1
	0b00101000, 127
	0b00000000, 11
	0b00000010, 13
	0b00110010, 1
	0b00100010, 3
	0b00000000, 5
	0b00001000, 96
	0b00001010, 1
	0b00000010, 8
	0b00001010, 2
	0b00001000, 159
	0b00111000, 1
	0b00101000, 18
	0b00001000, 5
	0b00111000, 1
	0b00101000, 57
	0b00001000, 1
	0b00000000, 10
	0b00000010, 17
	0b00110010, 1
	0b00100010, 3
	0b00000000, 6
	0b00001000, 40
	0b00000000, 19
	0b00001000, 27
	0b00111000, 1
	0b00101000, 11
	0b00001000, 6
	0b00111000, 1
	0b00101000, 66
	0b00101001, 6
	0b00100001, 14
	0b00000001, 22
	0b00000000, 107
	0b00000001, 51
	0b00000000, 6
	0b00000010, 6
	0b00110010, 1
	0b00100010, 2
	0b00000000, 1
end table


public function ARZSetup_getClrDivisor
	object.clrDivisor_R = temp1
	object.clrDivisor_R >>= 16
	
	object.clrDivisor_G = temp1
	object.clrDivisor_G >>= 8
	object.clrDivisor_G &= 0xFF

	object.clrDivisor_B = temp1
	object.clrDivisor_B &= 0xFF

	object.waterClrDivisor_R = temp2
	object.waterClrDivisor_R >>= 16

	object.waterClrDivisor_G = temp2
	object.waterClrDivisor_G >>= 8
	object.waterClrDivisor_G &= 0xFF

	object.waterClrDivisor_B = temp2
	object.waterClrDivisor_B &= 0xFF

	if object.waterClrDivisor_R == 0
		object.waterClrDivisor_R = 1
	end if

	if object.waterClrDivisor_G == 0
		object.waterClrDivisor_G = 1
	end if

	if object.waterClrDivisor_B == 0
		object.waterClrDivisor_B = 1
	end if

	object.clrDivisor_R <<= 8
	object.clrDivisor_G <<= 8
	object.clrDivisor_B <<= 8
	object.clrDivisor_R /= object.waterClrDivisor_R
	object.clrDivisor_G /= object.waterClrDivisor_G
	object.clrDivisor_B /= object.waterClrDivisor_B

	if object.clrDivisor_R == 0
		object.clrDivisor_R = 0x100
	end if

	if object.clrDivisor_G == 0
		object.clrDivisor_G = 0x100
	end if

	if object.clrDivisor_B == 0
		object.clrDivisor_B = 0x100
	end if
end function


public function ARZSetup_InitSuperSonicPal
	temp0 = 0

	GetPaletteEntry(1, 2, temp1)
	SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
	temp0++

	GetPaletteEntry(1, 3, temp1)
	SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
	temp0++

	GetPaletteEntry(1, 4, temp1)
	SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
	temp0++

	GetPaletteEntry(1, 5, temp1)
	SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
	temp0++

	while temp0 < 64
		GetPaletteEntry(0, 2, temp1)
		GetPaletteEntry(1, 2, temp2)

		CallFunction(ARZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_SonicSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0xE0
		temp1 /= object.clrDivisor_R

		temp2 *= 0xE0
		temp2 /= object.clrDivisor_G

		temp3 *= 0xE0
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
		temp0++

		GetPaletteEntry(0, 3, temp1)
		GetPaletteEntry(1, 3, temp2)

		CallFunction(ARZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_SonicSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0xE8
		temp1 /= object.clrDivisor_R

		temp2 *= 0xE8
		temp2 /= object.clrDivisor_G

		temp3 *= 0xE8
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
		temp0++

		GetPaletteEntry(0, 4, temp1)
		GetPaletteEntry(1, 4, temp2)

		CallFunction(ARZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_SonicSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0xF4
		temp1 /= object.clrDivisor_R

		temp2 *= 0xF4
		temp2 /= object.clrDivisor_G

		temp3 *= 0xF4
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
		temp0++

		GetPaletteEntry(0, 5, temp1)
		GetPaletteEntry(1, 5, temp2)

		CallFunction(ARZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_SonicSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0x100
		temp1 /= object.clrDivisor_R

		temp2 *= 0x100
		temp2 /= object.clrDivisor_G

		temp3 *= 0x100
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_SonicSuperAltPal)
		temp0++
	loop
end function


public function ARZSetup_InitSuperTailsPal
	temp0 = 0
	GetPaletteEntry(1, 13, temp1)
	SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
	temp0++

	GetPaletteEntry(1, 17, temp1)
	SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
	temp0++
	
	GetPaletteEntry(1, 18, temp1)
	SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
	temp0++

	GetPaletteEntry(1, 16, temp1)
	SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
	temp0++

	while temp0 < 24
		GetPaletteEntry(0, 13, temp1)
		GetPaletteEntry(1, 13, temp2)

		CallFunction(ARZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_TailsSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0xF8
		temp1 /= object.clrDivisor_R

		temp2 *= 0xF8
		temp2 /= object.clrDivisor_G

		temp3 *= 0xF8
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
		temp0++


		GetPaletteEntry(0, 17, temp1)
		GetPaletteEntry(1, 17, temp2)

		CallFunction(ARZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_TailsSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0x100
		temp1 /= object.clrDivisor_R

		temp2 *= 0x100
		temp2 /= object.clrDivisor_G

		temp3 *= 0x100
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
		temp0++


		GetPaletteEntry(0, 18, temp1)
		GetPaletteEntry(1, 18, temp2)

		CallFunction(ARZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_TailsSuperPal)

		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0x100
		temp1 /= object.clrDivisor_R

		temp2 *= 0x100
		temp2 /= object.clrDivisor_G

		temp3 *= 0x100
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
		temp0++

		GetPaletteEntry(0, 16, temp1)
		GetPaletteEntry(1, 16, temp2)

		CallFunction(ARZSetup_getClrDivisor)

		GetTableValue(temp1, temp0, PlayerObject_TailsSuperPal)
		temp2 = temp1
		temp2 >>= 8
		temp2 &= 0xFF

		temp3 = temp1
		temp3 &= 0xFF

		temp1 >>= 16

		temp1 *= 0x100
		temp1 /= object.clrDivisor_R

		temp2 *= 0x100
		temp2 /= object.clrDivisor_G

		temp3 *= 0x100
		temp3 /= object.clrDivisor_B

		temp1 &= 0xF0
		temp2 &= 0xF0
		temp3 &= 0xF0

		if temp1 > 0xE0
			temp1 = 0xE0
		end if

		if temp2 > 0xE0
			temp2 = 0xE0
		end if

		if temp3 > 0xE0
			temp3 = 0xE0
		end if

		temp1 <<= 16
		temp2 <<= 8
		temp1 += temp2
		temp1 += temp3
		SetTableValue(temp1, temp0, PlayerObject_TailsSuperAltPal)
		temp0++
	loop
end function


public function ARZSetup_InitSuperKnuxPal
	temp0 = 0
	
	GetPaletteEntry(1, 26, temp1)
	SetTableValue(temp1, temp0, PlayerObject_KnuxSuperAltPal)
	temp0++

	GetPaletteEntry(1, 27, temp1)
	SetTableValue(temp1, temp0, PlayerObject_KnuxSuperAltPal)
	temp0++

	GetPaletteEntry(1, 28, temp1)
	SetTableValue(temp1, temp0, PlayerObject_KnuxSuperAltPal)
	temp0++
end function


public function ARZSetup_SpeedUpMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, 2)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == false
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F)
			SwapMusicTrack("AquaticRuin_F.ogg", TRACK_STAGE, MUSIC_LOOP_ARZ_F, 8000)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("AquaticRuin_F.ogg", TRACK_STAGE, MUSIC_LOOP_ARZ_F)
			SwapMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F, 8000)
			break

		case TRACK_BOSS
		case TRACK_DROWNING
		case TRACK_SUPER
			SetMusicTrack("AquaticRuin_F.ogg", TRACK_STAGE, MUSIC_LOOP_ARZ_F)
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV_F)
			break
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SPEEDUP
	end if
end function


public function ARZSetup_SlowDownMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, 2)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == false
		switch music.currentTrack
		case TRACK_STAGE
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV)
			SwapMusicTrack("AquaticRuin.ogg", TRACK_STAGE, MUSIC_LOOP_ARZ, 12500)
			break

		case TRACK_INVINCIBLE
			SetMusicTrack("AquaticRuin.ogg", TRACK_STAGE, MUSIC_LOOP_ARZ)
			SwapMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV, 12500)
			break

		case TRACK_BOSS
		case TRACK_DROWNING
		case TRACK_SUPER
			SetMusicTrack("AquaticRuin.ogg", TRACK_STAGE, MUSIC_LOOP_ARZ)
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, MUSIC_LOOP_INV)
			break
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SLOWDOWN
	end if
end function


// ========================
// Events
// ========================

event ObjectUpdate
	object.paletteTimer++
	if object.paletteTimer == 6
		// Animate the waterfalls
		object.paletteTimer = 0
		RotatePalette(0, 162, 165, true)
		RotatePalette(1, 162, 165, true)
	end if

	if Water_flashTimer > 0
		Water_flashTimer--
	end if
end event


event ObjectDraw
	temp0 = stage.waterLevel
	temp0 -= screen.yoffset
	if temp0 < 0
		temp0 = 0
	end if
	if temp0 > screen.ysize
		temp0 = screen.ysize
	end if

	SetActivePalette(0, 0, temp0)
	if Water_flashTimer > 0
		SetActivePalette(2, temp0, screen.ysize)
	else
		SetActivePalette(1, temp0, screen.ysize)
	end if
end event


event ObjectStartup
	// Set the stage layer midpoint but, this is already what's present in the scene file?
	// So why is it set again here..?
	stage.midPoint = 2
	
	// Reset the boss flash colour to be pure black
	SetPaletteEntry(0, 192, 0x000000)

	SetMusicTrack("AquaticRuin.ogg", TRACK_STAGE, MUSIC_LOOP_ARZ)

	SpeedUpMusic = ARZSetup_SpeedUpMusic
	SlowDownMusic = ARZSetup_SlowDownMusic

	animalType1 = TypeName[Flicky]
	animalType2 = TypeName[Pecky]

	object[SLOT_ZONESETUP].type = TypeName[ARZ Setup]
	object[SLOT_ZONESETUP].priority = PRIORITY_ACTIVE
	object[SLOT_ZONESETUP].drawOrder = 0

	// Different BG properties for the different acts
	// -> Boss attack isn't listed here, so it uses the default values already in the scene file
	switch stage.actNum
	case 1
		stage.curYBoundary1 = 512
		tileLayer[1].scrollPos = -0x1800000
		tileLayer[2].scrollPos = -0x1800000
		tileLayer[1].parallaxFactor = 0x100
		tileLayer[2].parallaxFactor = 0x100
		break
	case 2
		stage.curYBoundary1 = 384
		tileLayer[3].scrollPos = -0x800000
		tileLayer[4].scrollPos = -0x800000
		tileLayer[3].parallaxFactor = 0x80
		tileLayer[4].parallaxFactor = 0x80
		break
	end switch

	LoadPalette("ARZ_WaterPal.act", 1, 0, 0, 256)

	CallFunction(ARZSetup_InitSuperSonicPal)
	CallFunction(ARZSetup_InitSuperTailsPal)
	CallFunction(ARZSetup_InitSuperKnuxPal)

	LoadPalette("ElectricFlash.act", 2, 0, 0, 256)
	Water_flashTimer = 0

	if options.attractMode == true
		switch stage.playerListPos
		case 0
			PlayerObject_ReplayTable = ARZSetup_replay_attract_S
			PlayerObject_ReplaySize = 154
			PlayerObject_ReplayLength = 1740
			break
		case 1
			PlayerObject_ReplayTable = ARZSetup_replay_attract_T
			PlayerObject_ReplaySize = 138
			PlayerObject_ReplayLength = 1800
			break
		case 2
			PlayerObject_ReplayTable = ARZSetup_replay_attract_K
			PlayerObject_ReplaySize = 126
			PlayerObject_ReplayLength = 1800
			break
		end switch

		CallFunction(PlayerObject_InitReplay)
	end if
end event


event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
