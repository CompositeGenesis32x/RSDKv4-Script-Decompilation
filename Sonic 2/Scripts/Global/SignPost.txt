// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: Sign Post Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases

// Variables
private alias object.value1 : object.spinCount
private alias object.value2 : object.spinTimer
private alias object.value3 : object.activePlayers
private alias object.value4 : object.allPlayersFinished
private alias object.value5 : object.lastPlayerID

// States
private alias 0 : SIGNPOST_IDLE
private alias 1 : SIGNPOST_SPUN
private alias 2 : SIGNPOST_EXITPLAYER
private alias 3 : SIGNPOST_IDLE_VS
private alias 4 : SIGNPOST_SPUN_VS
private alias 5 : SIGNPOST_UNUSED
private alias 6 : SIGNPOST_FINISHED

private alias 1 : SUPERSTATE_SUPER
private alias 2 : SUPERSTATE_FADEOUT

// Function declarations
reserve function SignPost_DebugDraw
reserve function SignPost_DebugSpawn

// Static Values

// Tables

function SignPost_DebugDraw
	DrawSprite(0)
	DrawSprite(1)
end function


function SignPost_DebugSpawn
	CreateTempObject(TypeName[Sign Post], 0, object.xpos, object.ypos)
	object[tempObjectPos].frame = 1
	object[tempObjectPos].spinCount = 16
	if options.vsMode == true
		object[tempObjectPos].state = SIGNPOST_IDLE_VS
	end if
end function


event ObjectMain
	switch object.state
	case SIGNPOST_IDLE
		temp0 = object.ypos
		temp0 += 0x400000
		if object[0].ypos < temp0
			stage.newXBoundary1 = object.xpos
			stage.newXBoundary1 >>= 16
			stage.newXBoundary1 -= screen.xcenter
			stage.newXBoundary1 -= screen.xcenter

			stage.newXBoundary2 = object.xpos
			stage.newXBoundary2 >>= 16
			stage.newXBoundary2 += screen.xcenter

			if object[0].xpos > object.xpos
				stage.newXBoundary1 = object.xpos
				stage.newXBoundary1 >>= 16
				stage.newXBoundary1 -= screen.xcenter
				switch object[0].propertyValue
				case 0
					EditFrame(5, -24, -16, 48, 32, 34, 1)
					break
				case 1
					EditFrame(5, -24, -16, 48, 32, 34, 34)
					break
				case 2
					EditFrame(5, -24, -16, 48, 32, 34, 67)
					break
				end switch

				if stage.debugMode == false
					if stage.activeList == BONUS_STAGE
						if stage.minutes < 7
							CallNativeFunction2(SetAchievement, AchievementName[Scrambled Egg], 100)
						end if
					else
						if stage.listPos == 0
							if stage.minutes == 0
								if stage.seconds < 35
									CallNativeFunction2(SetAchievement, AchievementName[Quick Run], 100)
								end if
							end if
						end if
					end if
				end if

				stage.timeEnabled = false
				object.state = SIGNPOST_SPUN
				PlaySfx(SfxName[Sign Post], false)
				if PlayerObject_SuperState == SUPERSTATE_SUPER
					PlayerObject_SuperState = SUPERSTATE_FADEOUT
					if stage.debugMode == false
						CallNativeFunction2(SetAchievement, AchievementName[Superstar], 100)
					end if
				end if
			end if
		end if
		break
		
	case SIGNPOST_SPUN
		music.volume--

		object.spinTimer++
		if object.spinTimer == 2
			object.spinTimer = 0
			object.frame++
			if object.frame == 5
				object.frame = 1
				Rand(temp0, 48)
				temp0 <<= 16
				temp0 += object.xpos
				temp0 -= 0x180000
				Rand(temp1, 32)
				temp1 <<= 16
				temp1 += object.ypos
				temp1 -= 0x140000
				CreateTempObject(TypeName[Ring Sparkle], 0, temp0, temp1)
				object.spinCount--
				if object.spinCount == 0
					SetBit(object.activePlayers, 0, true)
					if stage.player2Enabled == true
						SetBit(object.activePlayers, 1, true)
					end if
					object.state = SIGNPOST_EXITPLAYER
				end if
			end if
		end if
		break

	case SIGNPOST_EXITPLAYER
		temp0 = screen.xcenter
		temp0 <<= 16
		temp0 += object.xpos
		if object[0].xpos > temp0
			PlayMusic(1)
			object.state = SIGNPOST_FINISHED
			object[30].type = TypeName[Act Finish]
			object[30].drawOrder = 6
			object[30].priority = PRIORITY_ACTIVE
		end if
		break

	case SIGNPOST_IDLE_VS
		stage.newXBoundary2 = object.xpos
		stage.newXBoundary2 >>= 16
		stage.newXBoundary2 += screen.xcenter
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			GetBit(temp1, object.activePlayers, currentPlayer)
			if temp1 == false
				if object[currentPlayer].xpos > object.xpos
					object.priority = PRIORITY_ACTIVE
					SetBit(object.activePlayers, currentPlayer, true)
					if currentPlayer == 0
						if PlayerObject_SuperState == SUPERSTATE_SUPER
							PlayerObject_SuperState = SUPERSTATE_FADEOUT
						end if

						if vs.playerID == 0
							temp2 = 0
						else
							temp2 = 1
						end if
					else
						if vs.playerID == 0
							temp2 = 1
						else
							temp2 = 0
						end if
					end if

					if temp2 == 0
						vs.time1P = stage.milliSeconds
						vs.time1P = stage.seconds
						vs.time1P *= 100
						temp2 = stage.minutes
						temp2 *= 6000
						vs.time1P += temp2
						vs.time1P += stage.milliSeconds
					else
						vs.time2P = stage.milliSeconds
						vs.time2P = stage.seconds
						vs.time2P *= 100
						temp2 = stage.minutes
						temp2 *= 6000
						vs.time2P += temp2
						vs.time2P += stage.milliSeconds
					end if
					object.lastPlayerID = currentPlayer
					object.spinCount = 16
					object.state = SIGNPOST_SPUN_VS
					PlaySfx(SfxName[Sign Post], false)

					if object.allPlayersFinished == false
						PlaySfx(SfxName[Sign Post 2P], false)
						object[30].state = 3
						object[30].value5 = currentPlayer
						object[30].value5 ^= 1
						switch object[currentPlayer].propertyValue
						case 0
							EditFrame(5, -24, -16, 48, 32, 34, 1)
							break
						case 1
							EditFrame(5, -24, -16, 48, 32, 34, 34)
							break
						case 2
							EditFrame(5, -24, -16, 48, 32, 34, 67)
							break
						end switch
					else
						object[30].state = 0
					end if

					if object.activePlayers == 3
						object.allPlayersFinished	= true
						object[30].state 			= 0
					end if
				end if
			end if
		next
		break

	case SIGNPOST_SPUN_VS
		if object.allPlayersFinished == true
			music.volume--
		else
			foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
				GetBit(temp1, object.activePlayers, currentPlayer)
				if temp1 == false
					if object[currentPlayer].xpos > object.xpos
						object.spinTimer	= 1
						object.frame 	 	= 4
						object.spinCount 	= 1
					end if
				end if
			next
		end if

		object.spinTimer++
		if object.spinTimer == 2
			object.spinTimer = 0
			object.frame++
			if object.frame == 5
				object.frame = 1
				Rand(temp0, 48)
				temp0 <<= 16
				temp0 += object.xpos
				temp0 -= 0x180000
				Rand(temp1, 32)
				temp1 <<= 16
				temp1 += object.ypos
				temp1 -= 0x140000
				CreateTempObject(TypeName[Ring Sparkle], 0, temp0, temp1)
				object.spinCount--
				if object.spinCount == 0
					if object.allPlayersFinished == false
						object.allPlayersFinished = true
						object.state = SIGNPOST_IDLE_VS
						if object.lastPlayerID == 1
							screen.cameraTarget = 1
							object[1].scrollTracking = true
							object[9].type = TypeName[Blank Object]
							CreateTempObject(TypeName[VS Game], 0, object.xpos, object.ypos)
							object[tempObjectPos].value0 = 384
							object[tempObjectPos].state = 2
							screen.cameraX = object[1].xpos
							screen.cameraX >>= 16
							screen.cameraY = object[1].ypos
							screen.cameraY >>= 16
						end if
					else
						object.state = SIGNPOST_FINISHED
						object[30].state = 4
						object[30].value0 = -768
					end if
				end if
			end if
		end if
		break

	case SIGNPOST_FINISHED
		break

	default
	case SIGNPOST_UNUSED
		break
	end switch

	temp0 = 40
	temp0 += 212
	temp0 <<= 16
	temp0 += object.xpos
	currentPlayer = 0
	while currentPlayer < playerCount
		GetBit(temp1, object.activePlayers, currentPlayer)
		if temp1 == true
			object[currentPlayer].interaction 	= false
			object[currentPlayer].controlMode 	= -1
			object[currentPlayer].up 			= false
			object[currentPlayer].down 			= false
			object[currentPlayer].left 			= false
			object[currentPlayer].right 		= true
			object[currentPlayer].jumpPress 	= false
			object[currentPlayer].jumpHold 		= false
		end if

		if object[currentPlayer].xpos > temp0
			object[currentPlayer].xpos 	= temp0
			object[currentPlayer].speed = 0
			object[currentPlayer].xvel 	= 0
		end if

		if object[currentPlayer].type == TypeName[Debug Mode]
			SetBit(object.activePlayers, currentPlayer, false)
		end if
		currentPlayer++
	loop
end event


event ObjectDraw
	DrawSprite(0)
	if object.spinCount > 8
		DrawSprite(object.frame)
	else
		temp0 = object.frame
		temp0 += 4
		DrawSprite(temp0)
	end if
end event


event ObjectStartup
	LoadSpriteSheet("Global/Items2.gif")
	SpriteFrame(-24, 16, 48, 16, 34, 132)
	SpriteFrame(-24, -16, 48, 32, 34, 100)
	SpriteFrame(-16, -16, 32, 32, 149, 99)
	SpriteFrame(-4, -16, 8, 32, 247, 2)
	SpriteFrame(-16, -16, 32, 32, 116, 99)
	SpriteFrame(-24, -16, 48, 32, 34, 1)
	SpriteFrame(-16, -16, 32, 32, 149, 99)
	SpriteFrame(-4, -16, 8, 32, 247, 2)
	SpriteFrame(-16, -16, 32, 32, 116, 99)
	foreach (TypeName[Sign Post], arrayPos0, ALL_ENTITIES)
		CheckGreater(object[arrayPos0].propertyValue, 0)
		temp0 = checkResult
		CheckEqual(options.vsMode, false)
		temp0 &= checkResult
		if temp0 == true
			object[arrayPos0].type = TypeName[Blank Object]
		else
			object[arrayPos0].frame = 1
			object[arrayPos0].spinCount = 16
			if object[arrayPos0].propertyValue != 2
				object[arrayPos0].priority = PRIORITY_XBOUNDS
			end if
		end if
		if options.vsMode == true
			object[arrayPos0].state = 3
		end if
	next
	SetTableValue(TypeName[Sign Post], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(SignPost_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(SignPost_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
end event

event RSDKEdit
	if editor.returnVariable == true
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			checkResult = object.propertyValue
			break
		case 0 // type
			checkResult = object.propertyValue
			break
		end switch
	else
		switch editor.variableID
		case EDIT_VAR_PROPVAL // property value
			object.propertyValue = editor.variableValue
			break
		case 0 // type
			object.propertyValue = editor.variableValue
			break
		end switch
	end if
end event

event RSDKDraw
	DrawSprite(0)
	DrawSprite(1)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Items2.gif")
	SpriteFrame(-24, 16, 48, 16, 34, 132)
	SpriteFrame(-24, -16, 48, 32, 34, 100)

	AddEditorVariable("type")
	SetActiveVariable("type")
	AddEnumVariable("Normal", 0)
	AddEnumVariable("VS Only (No Y Bounds)", 1)
	AddEnumVariable("VS Only (Use Y Bounds)", 2)
end event
