// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: HTZ Setup Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias 40 : TYPE_HTZSETUP

private alias object.value1  : object.palRotateTimer

private alias object.value5  : object.aniTilesTimerA
private alias object.value6  : object.aniTilesIndexA

private alias object.value7  : object.aniTilesTimerB
private alias object.value8  : object.aniTilesIndexB

private alias object.value9  : object.aniTilesTimerC
private alias object.value10 : object.aniTilesIndexC

private alias object.value11 : object.aniTilesTimerD
private alias object.value12 : object.aniTilesIndexD

private alias object.value13 : object.aniTilesTimerE
private alias object.value14 : object.aniTilesIndexE

private alias object.value15 : object.palIndexA
private alias object.value16 : object.palIndexB
private alias object.value17 : object.palIndexC
private alias object.value18 : object.palIndexD

private alias object.value19 : object.shakeTimer


// Tracks
private alias 0 : TRACK_STAGE
private alias 2 : TRACK_INVINCIBLE

// Music Events
private alias 25 : SLOT_MUSICEVENT_CHANGE

private alias 0 : MUSICEVENT_FLAG_NOCHANGE
private alias 1 : MUSICEVENT_FLAG_SPEEDUP
private alias 2 : MUSICEVENT_FLAG_SLOWDOWN

// Function declarations
reserve function HTZSetup_SpeedUpMusic
reserve function HTZSetup_SlowDownMusic

// Static Values
public value HTZSetup_value33 = 0;
public value HTZSetup_value34 = 0;
public value HTZSetup_value35 = 0;
public value HTZSetup_value36 = 0;
public value HTZSetup_value37 = 0;

// Tables
public table HTZSetup_aniTilesTableA
	508, 24, 509, 10, 510, 12, 511, 24, 510, 12, 509, 10
end table

public table HTZSetup_aniTilesTableB
	512, 128, 513, 20, 512, 8, 513, 8, 512, 8, 513, 8
end table

public table HTZSetup_aniTilesTableC
	514, 128, 515, 12, 514, 12, 515, 12, 514, 6, 515, 6, 514, 6, 515, 6
end table

public table HTZSetup_aniTilesTableD
	516, 8, 517, 8
end table

public table HTZSetup_aniTilesTableE
	518, 128, 519, 8, 518, 8, 519, 8, 518, 8, 519, 12, 518, 12, 519, 12
end table

public table HTZSetup_palTable
	0xE00000, 0xE06000, 0xE0A000, 0xE0E000, 0xE0E000, 0xE00000, 0xE06000, 0xE0A000, 0xE0C020, 0xE0E000, 0xE00000, 0xE06000, 0xE06000, 0xE0E040, 0xE0E080, 0xE02000
	0xE04000, 0xE08000, 0xE0E060, 0xE0E0A0, 0xE0E080, 0xE02000, 0xE06000, 0xE0E040, 0xE0C020, 0xE0E000, 0xE00000, 0xE06000, 0xE06000, 0xE0C020, 0xE0E000, 0xE00000
	0xE00000, 0xE06000, 0xE0A000, 0xE0E000, 0xE0C000, 0xC00000, 0xE04000, 0xE08000, 0xE06000, 0xC0A000, 0xA00000, 0xE02000, 0xC00000, 0xC04000, 0xE08000, 0x800000
	0xA00000, 0xE02000, 0xE06000, 0xC0A000, 0xE0C000, 0xC00000, 0xE04000, 0xE08000, 0xE0A000, 0xE0E000, 0xE00000, 0xE06000, 0xE06000, 0xE0A000, 0xE0E000, 0xE00000
end table

function HTZSetup_SpeedUpMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, 2)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == false
		switch music.currentTrack
		case 0
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, 30897)
			SwapMusicTrack("HillTop_F.ogg", TRACK_STAGE, 1, 8000)
			break
		case 2
			SetMusicTrack("HillTop_F.ogg", TRACK_STAGE, 1)
			SwapMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, 30897, 8000)
			break
		case 4
		case 6
		case 7
			SetMusicTrack("HillTop_F.ogg", TRACK_STAGE, 1)
			SetMusicTrack("Invincibility_F.ogg", TRACK_INVINCIBLE, 30897)
			break
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SPEEDUP
	end if
end function


function HTZSetup_SlowDownMusic
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].type, TypeName[Music Event])
	temp0 = checkResult
	CheckEqual(object[SLOT_MUSICEVENT_CHANGE].propertyValue, 2)
	temp0 &= checkResult
	CheckEqual(stage.musicFlag, MUSICEVENT_FLAG_NOCHANGE)
	temp0 &= checkResult
	if temp0 == false
		switch music.currentTrack
		case 0
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, 38679)
			SwapMusicTrack("HillTop.ogg", TRACK_STAGE, 1, 12500)
			break
		case 2
			SetMusicTrack("HillTop.ogg", TRACK_STAGE, 1)
			SwapMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, 38679, 12500)
			break
		case 4
		case 6
		case 7
			SetMusicTrack("HillTop.ogg", TRACK_STAGE, 1)
			SetMusicTrack("Invincibility.ogg", TRACK_INVINCIBLE, 38679)
			break
		end switch
	else
		stage.musicFlag = MUSICEVENT_FLAG_SLOWDOWN
	end if
end function


event ObjectMain
	object.palRotateTimer++
	if object.palRotateTimer == 12
		object.palRotateTimer = 0
		object.palIndexA += 4
		object.palIndexA &= 63
		GetTableValue(temp0, object.palIndexA, HTZSetup_palTable)
		SetPaletteEntry(0, 147, temp0)
		object.palIndexB += 4
		object.palIndexB &= 63
		GetTableValue(temp0, object.palIndexB, HTZSetup_palTable)
		SetPaletteEntry(0, 148, temp0)
		object.palIndexC += 4
		object.palIndexC &= 63
		GetTableValue(temp0, object.palIndexC, HTZSetup_palTable)
		SetPaletteEntry(0, 158, temp0)
		object.palIndexD += 4
		object.palIndexD &= 63
		GetTableValue(temp0, object.palIndexD, HTZSetup_palTable)
		SetPaletteEntry(0, 159, temp0)
	end if

	if object.aniTilesTimerA < 2
		GetTableValue(temp0, object.aniTilesIndexA, HTZSetup_aniTilesTableA)
		Copy16x16Tile(761, temp0)
		temp0 += 12
		Copy16x16Tile(762, temp0)
		temp0 += 4
		Copy16x16Tile(763, temp0)
		object.aniTilesIndexA++
		GetTableValue(object.aniTilesTimerA, object.aniTilesIndexA, HTZSetup_aniTilesTableA)
		object.aniTilesIndexA++
		object.aniTilesIndexA %= 12
	else
		object.aniTilesTimerA--
	end if

	if object.aniTilesTimerB < 2
		GetTableValue(temp0, object.aniTilesIndexB, HTZSetup_aniTilesTableB)
		Copy16x16Tile(764, temp0)
		object.aniTilesIndexB++
		GetTableValue(object.aniTilesTimerB, object.aniTilesIndexB, HTZSetup_aniTilesTableB)
		object.aniTilesIndexB++
		object.aniTilesIndexB %= 12
	else
		object.aniTilesTimerB--
	end if

	if object.aniTilesTimerC < 2
		GetTableValue(temp0, object.aniTilesIndexC, HTZSetup_aniTilesTableC)
		Copy16x16Tile(765, temp0)
		object.aniTilesIndexC++
		GetTableValue(object.aniTilesTimerC, object.aniTilesIndexC, HTZSetup_aniTilesTableC)
		object.aniTilesIndexC++
		object.aniTilesIndexC &= 15
	else
		object.aniTilesTimerC--
	end if

	if object.aniTilesTimerD < 2
		GetTableValue(temp0, object.aniTilesIndexD, HTZSetup_aniTilesTableD)
		Copy16x16Tile(766, temp0)
		object.aniTilesIndexD++
		GetTableValue(object.aniTilesTimerD, object.aniTilesIndexD, HTZSetup_aniTilesTableD)
		object.aniTilesIndexD++
		object.aniTilesIndexD &= 3
	else
		object.aniTilesTimerD--
	end if

	if object.aniTilesTimerE < 2
		GetTableValue(temp0, object.aniTilesIndexE, HTZSetup_aniTilesTableE)
		Copy16x16Tile(767, temp0)
		object.aniTilesIndexE++
		GetTableValue(object.aniTilesTimerE, object.aniTilesIndexE, HTZSetup_aniTilesTableE)
		object.aniTilesIndexE++
		object.aniTilesIndexE &= 15
	else
		object.aniTilesTimerE--
	end if

	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		// Check if any players are standing on lava tiles, and hurt them if so
		temp1 = object[currentPlayer].xpos
		temp1 >>= 16
		temp2 = object[currentPlayer].ypos
		temp2 >>= 16
		temp2 += 4
		Get16x16TileInfo(temp0, temp1, temp2, TILEINFO_ANGLEB)
		temp0 &= 1
		if temp0 == 1
			CallFunction(PlayerObject_FireHit)
		end if
	next

//	player.score = HTZSetup_value33

	if HTZSetup_value33 >= 1
		if object.value25 == 0
			if HTZSetup_value34 < 2
				stage.midPoint = 2
				stage.activeLayer[0] = 9
				stage.activeLayer[1] = 0
				stage.activeLayer[2] = 3
				stage.activeLayer[3] = 0
			else
				stage.midPoint = 2
				stage.activeLayer[0] = 9
				stage.activeLayer[1] = 0
				stage.activeLayer[2] = 4
				stage.activeLayer[3] = 0
			end if

			object.value25 = 1
			if HTZSetup_value34 != object.value26
				object.value23 = HTZSetup_value35
				HTZSetup_value36 = 0
				tileLayer[3].scrollPos = object.value23
				tileLayer[4].scrollPos = object.value23
				object.value26 = HTZSetup_value34
			end if
		end if

		if HTZSetup_value33 > 1
			if object.value21 > 0
				object.value21--
			else
				object.shakeTimer++
				object.shakeTimer %= 40
				if object.shakeTimer == 8
					PlaySfx(SfxName[Rumble], false)
				end if

				temp0 = object.shakeTimer
				temp0 &= 7
				if temp0 == 0
					screen.shakeX = 1
				end if

				temp0 = object.shakeTimer
				temp0 &= 3
				if temp0 == 0
					screen.shakeY = 2
				end if

				if object.value22 == 0
					object.value23 += 0x4000
					if object.value23 == HTZSetup_value37
						object.value22 = 1
						object.value21 = 120
					end if
				else
					object.value23 -= 0x4000
					if object.value23 == HTZSetup_value35
						object.value22 = 0
						object.value21 = 120
					end if
				end if
				tileLayer[3].scrollPos = object.value23
				tileLayer[4].scrollPos = object.value23
				HTZSetup_value36 = object.value23
				HTZSetup_value36 -= HTZSetup_value35
				HTZSetup_value36 >>= 16
			end if
		end if

		if object[0].type != TypeName[Debug Mode]
			HTZSetup_value33 = 0
		else
			object.value25 = 0
		end if
	else
		if object.value25 != 0
			object.value23 = HTZSetup_value35
			HTZSetup_value36 = 0
			tileLayer[3].scrollPos = object.value23
			tileLayer[4].scrollPos = object.value23
			stage.midPoint = 3
			stage.activeLayer[0] = 1
			stage.activeLayer[1] = 2
			stage.activeLayer[2] = 0
			stage.activeLayer[3] = 0
			object.shakeTimer = 0
			object.value20 = 0
			object.value21 = 0
			object.value22 = 0
			object.value25 = 0
		end if
	end if
end event


event ObjectStartup
	SetMusicTrack("HillTop.ogg", 0, true)

	// Set the music speed-changing functions
	SpeedUpMusic = HTZSetup_SpeedUpMusic
	SlowDownMusic = HTZSetup_SlowDownMusic

	// Reset the boss flash colour
	SetPaletteEntry(0, 192, 0x000000)

	animalType1 = TypeName[Locky]
	animalType2 = TypeName[Wocky]

	// Set the BG layers to start from the correct places
	tileLayer[1].scrollPos = -0x40000
	tileLayer[2].scrollPos = -0x40000

	object[10].type = TypeName[HTZ Setup]
	object[10].priority = PRIORITY_ACTIVE

	object[10].palIndexA = 0
	object[10].palIndexB = 1
	object[10].palIndexC = 2
	object[10].palIndexD = 3
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
