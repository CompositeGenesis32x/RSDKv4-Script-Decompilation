// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: Break Rock Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias 0 : BREAKROCK_ROCK
private alias 1 : BREAKROCK_FRAGMENT

// Player aliases
private alias object.value16 : player.isSidekick
private alias object.value19 : player.scoreBonus

// Function declarations
reserve function BreakRock_DebugDraw
reserve function BreakRock_DebugSpawn


function BreakRock_DebugDraw
	DrawSprite(0)
end function


function BreakRock_DebugSpawn
	CreateTempObject(TypeName[Break Rock], 0, object.xpos, object.ypos)
end function


event ObjectMain
	switch object.state
	case BREAKROCK_ROCK
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			if object[currentPlayer].animation == ANI_JUMPING
				BoxCollisionTest(C_BOX, object.entityPos, -16, -16, 16, 16, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				if checkResult == true
					object[currentPlayer].yvel = -0x30000
					object[currentPlayer].gravity = GRAVITY_AIR

					// Create the rock fragments

					CreateTempObject(TypeName[Break Rock], 1, object.xpos, object.ypos)
					object[tempObjectPos].ixpos -= 16
					object[tempObjectPos].iypos -= 8
					object[tempObjectPos].xvel = -0x20000
					object[tempObjectPos].yvel = -0x20000
					object[tempObjectPos].state = BREAKROCK_FRAGMENT
					object[tempObjectPos].drawOrder = 5

					CreateTempObject(TypeName[Break Rock], 2, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 0
					object[tempObjectPos].iypos -= 8
					object[tempObjectPos].xvel = 0
					object[tempObjectPos].yvel = -0x28000
					object[tempObjectPos].state = BREAKROCK_FRAGMENT
					object[tempObjectPos].drawOrder = 5

					CreateTempObject(TypeName[Break Rock], 3, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 16
					object[tempObjectPos].iypos -= 8
					object[tempObjectPos].xvel = 0x20000
					object[tempObjectPos].yvel = -0x20000
					object[tempObjectPos].state = BREAKROCK_FRAGMENT
					object[tempObjectPos].drawOrder = 5

					CreateTempObject(TypeName[Break Rock], 4, object.xpos, object.ypos)
					object[tempObjectPos].ixpos -= 16
					object[tempObjectPos].iypos += 8
					object[tempObjectPos].xvel = -0x1C000
					object[tempObjectPos].yvel = -0x1C000
					object[tempObjectPos].state = BREAKROCK_FRAGMENT
					object[tempObjectPos].drawOrder = 5

					CreateTempObject(TypeName[Break Rock], 5, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 0
					object[tempObjectPos].iypos += 8
					object[tempObjectPos].xvel = 0
					object[tempObjectPos].yvel = -0x20000
					object[tempObjectPos].state = BREAKROCK_FRAGMENT
					object[tempObjectPos].drawOrder = 5

					CreateTempObject(TypeName[Break Rock], 6, object.xpos, object.ypos)
					object[tempObjectPos].ixpos += 16
					object[tempObjectPos].iypos += 8
					object[tempObjectPos].xvel = 0x1C000
					object[tempObjectPos].yvel = -0x1C000
					object[tempObjectPos].state = BREAKROCK_FRAGMENT
					object[tempObjectPos].drawOrder = 5

					// Make this object disappear
					object.type = TypeName[Blank Object]

					// global variable "array" (yes, this is actually how its done)
					arrayPos0 = VarName[player.score]
					if player[currentPlayer].isSidekick == 0
						arrayPos0 += currentPlayer
					end if

					switch player[currentPlayer].scoreBonus
					case 0
						global[arrayPos0] += 100
						break

					case 1
						global[arrayPos0] += 200
						break

					case 2
						global[arrayPos0] += 500
						break

					case 3
					case 4
					case 5
					case 6
					case 7
					case 8
					case 9
					case 10
					case 11
					case 12
					case 13
					case 14
						global[arrayPos0] += 1000
						break
						
					case 15
						global[arrayPos0] += 10000
						break
					end switch

					CreateTempObject(TypeName[Object Score], player[currentPlayer].scoreBonus, object.xpos, object.ypos)
					object[tempObjectPos].drawOrder = 5
					if object[currentPlayer].gravity == GRAVITY_AIR
						if player[currentPlayer].scoreBonus < 15
							player[currentPlayer].scoreBonus++
						end if
					end if
					PlaySfx(SfxName[Block Break], false)
				end if
			else
				BoxCollisionTest(C_BOX, object.entityPos, -24, -16, 24, 16, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
			end if
		next
		break

	case BREAKROCK_FRAGMENT
		object.xpos += object.xvel
		object.ypos += object.yvel
		object.yvel += 0x1800
		
		if object.outOfBounds == true
			object.type = TypeName[Blank Object]
		end if
		break

	end switch
end event


event ObjectDraw
	DrawSprite(object.propertyValue)
end event


event ObjectStartup
	LoadSpriteSheet("HTZ/Objects.gif")
	SpriteFrame(-24, -16, 48, 32, 207, 94)
	SpriteFrame(-8, -8, 16, 16, 207, 94)
	SpriteFrame(-8, -8, 16, 16, 223, 94)
	SpriteFrame(-8, -8, 16, 16, 239, 94)
	SpriteFrame(-8, -8, 16, 16, 207, 110)
	SpriteFrame(-8, -8, 16, 16, 223, 110)
	SpriteFrame(-8, -8, 16, 16, 239, 110)

	SetTableValue(TypeName[Break Rock], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(BreakRock_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(BreakRock_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("HTZ/Objects.gif")
	SpriteFrame(-24, -16, 48, 32, 207, 94)
	
	// Although used by the object, it shouldn't be set by the editor
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
