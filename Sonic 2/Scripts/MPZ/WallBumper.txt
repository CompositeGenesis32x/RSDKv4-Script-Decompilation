// ----------------------------------
// RSDK Project: Sonic 2
// Script Description: Wall Bumper Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// Aliases
private alias object.value0 : object.top
private alias object.value1 : object.bottom

// Player aliases
private alias object.xvel : player.xvel
private alias object.yvel : player.yvel
private alias object.direction : player.direction
private alias object.state : player.state
private alias object.tileCollisions : player.tileCollisions
private alias object.gravity : player.gravity
private alias object.speed : player.speed
private alias object.collisionMode : player.collisionMode
private alias object.pushing : player.pushing
private alias object.controlLock : player.controlLock
private alias object.animation : player.animation
private alias object.prevAnimation : player.prevAnimation
private alias object.animationSpeed : player.animationSpeed
private alias object.frame : player.frame
private alias object.value1  : player.timer
private alias object.value25 : player.gravityStrength


event ObjectMain
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		// Check if the player's on the ground or in the air
		CheckEqual(object[currentPlayer].gravity, GRAVITY_GROUND)
		temp0 = checkResult
		CheckNotEqual(object[currentPlayer].collisionMode, CMODE_FLOOR)
		temp0 &= checkResult

		if temp0 == false
			BoxCollisionTest(C_TOUCH, object.entityPos, -10, object.top, 10, object.bottom, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
		else
			BoxCollisionTest(C_TOUCH, object.entityPos, -20, object.top, 20, object.bottom, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
		end if

		if checkResult == true
			if object.direction == FLIP_NONE
				object[currentPlayer].xvel = 0x80000
			else
				object[currentPlayer].xvel = -0x80000
			end if

			player[currentPlayer].yvel = -0x80000
			player[currentPlayer].yvel -= object[currentPlayer].gravityStrength
			player[currentPlayer].direction = object.direction
			player[currentPlayer].state = PlayerObject_HandleAir
			player[currentPlayer].tileCollisions = true
			player[currentPlayer].gravity = GRAVITY_AIR
			player[currentPlayer].speed = object[currentPlayer].xvel
			player[currentPlayer].timer = 1
			player[currentPlayer].collisionMode = CMODE_FLOOR
			player[currentPlayer].pushing = 0
			player[currentPlayer].controlLock = 15
			player[currentPlayer].animation = ANI_TWIRL
			player[currentPlayer].prevAnimation = ANI_TWIRL
			player[currentPlayer].frame = 0
			player[currentPlayer].animationSpeed = 90

			PlaySfx(SfxName[Spring], false)
		end if
	next
end event


event ObjectDraw
	// Only show if the player is in debug mode
	if object[0].type == TypeName[Debug Mode]
		temp1 = object.propertyValue
		temp1 &= 112
		if temp1 == 0
			temp0 = -0x400000
			temp1 = 8
		else
			temp0 = -0x800000
			temp1 = 16
		end if
		temp0 += object.ypos
		temp0 += 0x80000
		temp4 = 0
		while temp4 < temp1
			DrawSpriteXY(0, object.xpos, temp0)
			temp0 += 0x100000
			temp4++
		loop
	end if
end event


event ObjectStartup

	LoadSpriteSheet("Global/Display.gif")

	SpriteFrame(-8, -8, 16, 16, 93, 113) // 0 - Blank control circle

	foreach (TypeName[Wall Bumper], arrayPos0, ALL_ENTITIES)
		temp0 = object[arrayPos0].propertyValue
		temp0 &= 112
		if temp0 == 0
			object[arrayPos0].top = 64
		else
			object[arrayPos0].top = 128
		end if
		object[arrayPos0].bottom = object[arrayPos0].top
		FlipSign(object[arrayPos0].top)
		object[arrayPos0].drawOrder = 5
	next
end event

event RSDKDraw
	if editor.showGizmos == true
		temp1 = object.propertyValue
		temp1 &= 112
		if temp1 == 0
			temp0 = -0x400000
			temp1 = 8
		else
			temp0 = -0x800000
			temp1 = 16
		end if
		temp0 += object.ypos
		temp0 += 0x80000
		temp4 = 0
		while temp4 < temp1
			DrawSpriteXY(0, object.xpos, temp0)
			temp0 += 0x100000
			temp4++
		loop
	end if
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-8, -8, 16, 16, 93, 113)

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
